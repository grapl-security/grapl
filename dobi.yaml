meta:
  project: grapl
  default: build

#
# mounts
#

mount=dist:
  bind: ./dist
  path: /home/grapl/dist
  file: false

#
# images
#

# rust images

image=rust-build:
  image: grapl/grapl-rust-src-build
  context: src/rust
  dockerfile: Dockerfile
  args:
    release_target: "{env.GRAPL_RELEASE_TARGET:debug}"
  target: grapl-rust-src-build
  tags:
    - latest

image=analyzer-dispatcher:
  image: grapl/grapl-analyzer-dispatcher
  context: src/rust/analyzer-dispatcher
  dockerfile: Dockerfile
  args:
    release_target: "{env.GRAPL_RELEASE_TARGET:debug}"
  target: grapl-analyzer-dispatcher
  tags:
    - "{env.TAG}"
  depends:
    - rust-build

image=metric-forwarder:
  image: grapl/metric-forwarder
  context: src/rust/metric-forwarder
  dockerfile: Dockerfile
  args:
    release_target: "{env.GRAPL_RELEASE_TARGET:debug}"
  target: grapl-metric-forwarder
  tags:
    - "{env.TAG}"
  depends:
    - rust-build

image=generic-subgraph-generator:
  image: grapl/grapl-generic-subgraph-generator
  context: src/rust/generic-subgraph-generator
  dockerfile: Dockerfile
  args:
    release_target: "{env.GRAPL_RELEASE_TARGET:debug}"
  target: grapl-generic-subgraph-generator
  tags:
    - "{env.TAG}"
  depends:
    - rust-build

image=graph-merger:
  image: grapl/grapl-graph-merger
  context: src/rust/graph-merger
  dockerfile: Dockerfile
  args:
    release_target: "{env.GRAPL_RELEASE_TARGET:debug}"
  target: grapl-graph-merger
  tags:
    - "{env.TAG}"
  depends:
    - rust-build

image=node-identifier:
  image: grapl/grapl-node-identifier
  context: src/rust/node-identifier
  dockerfile: Dockerfile
  args:
    release_target: "{env.GRAPL_RELEASE_TARGET:debug}"
  target: grapl-node-identifier
  tags:
    - "{env.TAG}"
  depends:
    - rust-build

image=node-identifier-retry-handler:
  image: grapl/grapl-node-identifier-retry-handler
  context: src/rust/node-identifier
  dockerfile: Dockerfile
  args:
    release_target: "{env.GRAPL_RELEASE_TARGET:debug}"
  target: grapl-node-identifier-retry-handler
  tags:
    - "{env.TAG}"
  depends:
    - rust-build

image=sysmon-subgraph-generator:
  image: grapl/grapl-sysmon-subgraph-generator
  context: src/rust/sysmon-subgraph-generator
  dockerfile: Dockerfile
  args:
    release_target: "{env.GRAPL_RELEASE_TARGET:debug}"
  target: grapl-sysmon-subgraph-generator
  tags:
    - "{env.TAG}"
  depends:
    - rust-build

# python images

image=python-build:
  image: grapl/grapl-python-build
  context: src/python/grapl-python-build
  dockerfile: Dockerfile
  target: grapl-python-build
  tags:
    - latest

image=python-deploy:
  image: grapl/grapl-python-deploy
  context: src/python/grapl-python-deploy/
  dockerfile: Dockerfile
  target: grapl-python-deploy
  tags:
    - latest

image=graph-descriptions-build:
  image: grapl/grapl-graph-descriptions-python-build
  context: src/rust/graph-descriptions/
  dockerfile: Dockerfile
  target: grapl-graph-descriptions-python-build
  depends:
    - python-build
  tags:
    - latest

image=grapl-common-build:
  image: grapl/grapl-common-python-build
  context: src/python/grapl-common/
  dockerfile: Dockerfile
  target: grapl-common-python-build
  depends:
    - python-build
  tags:
    - latest

image=grapl-analyzerlib-build:
  image: grapl/grapl-analyzerlib-python-build
  context: src/python/grapl_analyzerlib/
  dockerfile: Dockerfile
  target: grapl-analyzerlib-python-build
  depends:
    - python-build
    - graph-descriptions-build
    - grapl-common-build
  tags:
    - latest

image=analyzer-deployer-build:
  image: grapl/analyzer-deployer-build
  context: src/python/analyzer-deployer/
  dockerfile: Dockerfile
  target: analyzer-deployer-build
  depends:
    - python-build
  tags:
    - latest

image=analyzer-deployer:
  image: grapl/analyzer-deployer
  context: src/python/analyzer-deployer/
  dockerfile: Dockerfile
  target: analyzer-deployer
  depends:
    - analyzer-deployer-build
    - python-deploy
  tags:
    - "{env.TAG}"

image=analyzer-executor-build:
  image: grapl/analyzer-executor-build
  context: src/python/analyzer_executor/
  dockerfile: Dockerfile
  target: analyzer-executor-build
  depends:
    - python-build
    - graph-descriptions-build
    - grapl-analyzerlib-build
  tags:
    - latest

image=analyzer-executor:
  image: grapl/grapl-analyzer-executor
  context: src/python/analyzer_executor/
  dockerfile: Dockerfile
  target: grapl-analyzer-executor
  depends:
    - analyzer-executor-build
    - python-deploy
  tags:
    - "{env.TAG}"

image=engagement-creator-build:
  image: grapl/engagement-creator-build
  context: src/python/engagement-creator
  dockerfile: Dockerfile
  target: engagement-creator-build
  depends:
    - python-build
    - graph-descriptions-build
    - grapl-analyzerlib-build
  tags:
    - latest

image=engagement-creator:
  image: grapl/grapl-engagement-creator
  context: src/python/engagement-creator
  dockerfile: Dockerfile
  target: grapl-engagement-creator
  depends:
    - engagement-creator-build
    - python-deploy
  tags:
    - "{env.TAG}"

image=engagement-edge-build:
  image: grapl/engagement-edge-build
  context: src/python/engagement_edge
  dockerfile: Dockerfile
  target: engagement-edge-build
  depends:
    - python-build
    - graph-descriptions-build
    - grapl-analyzerlib-build
  tags:
    - latest

image=engagement-edge:
  image: grapl/grapl-engagement-edge
  context: src/python/engagement_edge
  dockerfile: Dockerfile
  target: grapl-engagement-edge
  depends:
    - engagement-edge-build
    - python-deploy
  tags:
    - "{env.TAG}"

image=dgraph-ttl-build:
  image: grapl/grapl-dgraph-ttl-build
  context: src/python/grapl-dgraph-ttl
  dockerfile: Dockerfile
  target: grapl-dgraph-ttl-build
  depends:
    - python-build
    - graph-descriptions-build
    - grapl-analyzerlib-build
  tags:
    - latest

image=dgraph-ttl:
  image: grapl/grapl-dgraph-ttl
  context: src/python/grapl-dgraph-ttl
  dockerfile: Dockerfile
  target: grapl-dgraph-ttl
  depends:
    - dgraph-ttl-build
    - python-deploy
  tags:
    - "{env.TAG}"

image=model-plugin-deployer-build:
  image: grapl/grapl-model-plugin-deployer-build
  context: src/python/grapl-model-plugin-deployer
  dockerfile: Dockerfile
  target: grapl-model-plugin-deployer-build
  depends:
    - python-build
    - graph-descriptions-build
    - grapl-analyzerlib-build
  tags:
    - latest

image=model-plugin-deployer:
  image: grapl/grapl-model-plugin-deployer
  context: src/python/grapl-model-plugin-deployer
  dockerfile: Dockerfile
  target: grapl-model-plugin-deployer
  depends:
    - model-plugin-deployer-build
    - python-deploy
  tags:
    - "{env.TAG}"

image=grapl-notebook:
  image: grapl/grapl-notebook
  context: src/python/grapl-notebook
  dockerfile: Dockerfile
  tags:
    - "{env.TAG}"

image=graph-provision:
  image: grapl/grapl-graph-provision
  context: src/python/engagement_edge/
  dockerfile: Dockerfile
  target: grapl-engagement-edge
  depends:
    - engagement-edge-build
    - python-deploy
  tags:
    - "{env.TAG}"

image=dynamodb-provision:
  image: grapl/grapl-dynamodb-provision
  context: src/python/engagement_edge/
  dockerfile: Dockerfile
  target: grapl-engagement-edge
  depends:
    - engagement-edge-build
    - python-deploy
  tags:
    - "{env.TAG}"

image=grapl-e2e-tests-build:
  image: grapl/grapl-e2e-tests-build
  context: src/python/grapl_e2e_tests/
  dockerfile: Dockerfile
  target: grapl-e2e-tests-build
  depends:
    - grapl-analyzerlib-build
    - etc-build
  tags:
    - latest

# js images

image=grapl-cdk-build:
  image: grapl/grapl-cdk-build
  context: src/js/grapl-cdk
  dockerfile: Dockerfile
  target: grapl-cdk-build
  tags:
    - latest

image=engagement-view-build:
  image: grapl/engagement-view-build
  context: src/js/engagement_view
  dockerfile: Dockerfile
  target: engagement-view-build
  tags:
    - latest

image=engagement-view:
  image: grapl/grapl-engagement-view
  context: src/js/engagement_view
  dockerfile: Dockerfile
  target: grapl-engagement-view
  tags:
    - "{env.TAG}"

image=graphql-endpoint-build:
  image: grapl/grapl-graphql-endpoint-build
  context: src/js/graphql_endpoint
  dockerfile: Dockerfile
  target: grapl-graphql-endpoint-build
  tags:
    - latest

image=graphql-endpoint:
  image: grapl/grapl-graphql-endpoint
  context: src/js/graphql_endpoint
  dockerfile: Dockerfile
  target: grapl-graphql-endpoint
  depends:
    - graphql-endpoint-build
  tags:
    - "{env.TAG}"

# local grapl
image=etc-build:
  image: grapl/etc-build
  context: etc/
  dockerfile: Dockerfile
  target: etc-build
  tags:
    - "{env.TAG}"

#
# compose
#
# This is where hook into the docker-compose environment for running
# integration tests. It should be identical to local Grapl. The most
# important thing here is to keep the 'depends' list up to date.
#

compose=integration-env:
  files:
    - docker-compose.yml
  project: grapl-integration-tests
  depends:
    # rust images
    - analyzer-dispatcher
    - generic-subgraph-generator
    - metric-forwarder  # though, not currently used in integration
    - graph-merger
    - node-identifier
    - node-identifier-retry-handler
    - sysmon-subgraph-generator
    # python images
    - analyzer-deployer
    - analyzer-executor
    - engagement-creator
    - engagement-edge
    - dgraph-ttl
    - model-plugin-deployer
    - grapl-notebook
    - graph-provision
    - dynamodb-provision
    # js images
    - engagement-view
    - graphql-endpoint

#
# jobs -- these are where we build release artifacts
#

# rust jobs

job=build-rust:
  use: rust-build
  mounts:
    - dist
  artifact:
    - ./dist/

job=run-rust-unit-tests:
  use: rust-build
  command: /bin/bash -c "cargo test --target=x86_64-unknown-linux-musl"
  depends:
    - rust-build

job=run-node-identifier-integration-tests:
  use: rust-build
  net-mode: grapl-integration-tests_default
  command: /bin/bash -c "sleep 30 && cargo test --target=x86_64-unknown-linux-musl --manifest-path node-identifier/Cargo.toml --features integration"
  env:
    - GRAPL_LOG_LEVEL=INFO
    - RUST_LOG=INFO
    - RUST_BACKTRACE=1
    - "BUCKET_PREFIX=local-grapl"
    - "IS_LOCAL=True"
    - "MG_ALPHAS=grapl-master-graph-db:9080"
    - "SOURCE_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-node-identifier-retry-queue"
    - "GRAPH_MERGER_QUEUE_URL=http://sqs.us-east-1.amazonaws.com:9324/queue/grapl-graph-merger-queue"
    - STATIC_MAPPING_TABLE=local-grapl-static_mapping_table
    - DYNAMIC_SESSION_TABLE=local-grapl-dynamic_session_table
    - PROCESS_HISTORY_TABLE=local-grapl-process_history_table
    - FILE_HISTORY_TABLE=local-grapl-file_history_table
    - INBOUND_CONNECTION_HISTORY_TABLE=local-grapl-inbound_connection_history_table
    - OUTBOUND_CONNECTION_HISTORY_TABLE=local-grapl-outbound_connection_history_table
    - NETWORK_CONNECTION_HISTORY_TABLE=local-grapl-network_connection_history_table
    - IP_CONNECTION_HISTORY_TABLE=local-grapl-ip_connection_history_table
    - ASSET_ID_MAPPINGS=local-grapl-asset_id_mappings
  depends:
    - rust-build
    - integration-env

# python jobs

job=run-grapl-common-unit-tests:
  use: grapl-common-build
  command: /bin/bash -c "source venv/bin/activate && cd grapl_common/tests && ls && py.test -n auto -m 'not integration_test'"


job=run-engagement-creator-typecheck:
  use: engagement-creator-build
  command: /bin/bash -c "
    source venv/bin/activate &&
    cd engagement-creator &&
    pip install '.[typecheck]' &&
    mypy .
    "

job=run-grapl-common-typecheck:
  use: grapl-common-build
  command: /bin/bash -c "
    source venv/bin/activate &&
    cd grapl_common &&
    pip install '.[typecheck]' &&
    mypy .
    "

job=run-analyzer-deployer-typecheck:
  use: analyzer-deployer-build
  # the `touch` is a hack for mypy until https://github.com/aws/chalice/pull/1500 is in
  # since there's no setup.py, I have an explicit `pip install mypy` instead of `.[typecheck]`
  command: /bin/bash -c "
    source venv/bin/activate &&
    touch venv/lib/python3.7/site-packages/chalice/py.typed &&
    cd analyzer-deployer &&
    pip install mypy &&
    mypy .
    "

job=run-grapl-analyzerlib-unit-tests:
  use: grapl-analyzerlib-build
  command: /bin/bash -c "source venv/bin/activate && cd grapl_analyzerlib && py.test -n auto -m 'not integration_test'"

job=run-grapl-analyzerlib-integration-tests:
  use: grapl-analyzerlib-build
  net-mode: grapl-integration-tests_default
  command: /bin/bash -c "sleep 30 && source venv/bin/activate && cd grapl_analyzerlib && py.test -n auto -m 'integration_test'"
  env:
    - GRAPL_LOG_LEVEL=INFO
    - "BUCKET_PREFIX=local-grapl"
    - "IS_LOCAL=True"
    - "MG_ALPHAS=grapl-master-graph-db:9080"
  depends:
    - integration-env

job=build-analyzer-deployer:
  use: analyzer-deployer-build
  mounts:
    - dist
  artifact:
    - ./dist/analyzer-deployer/lambda.zip

job=run-analyzer-deployer-unit-tests:
  use: analyzer-deployer-build
  command: /bin/bash -c "source venv/bin/activate && cd analyzer-deployer && py.test -n auto -m 'not integration_test'"

job=run-analyzer-deployer-integration-tests:
  use: analyzer-deployer-build
  net-mode: grapl-integration-tests_default
  command: /bin/bash -c "sleep 30 && source venv/bin/activate && cd analyzer-deployer && py.test -n auto -m 'integration_test'"
  env:
    - GRAPL_LOG_LEVEL=INFO
    - "BUCKET_PREFIX=local-grapl"
    - "IS_LOCAL=True"
  depends:
    - integration-env

job=run-e2e-integration-tests:
  use: grapl-e2e-tests-build
  net-mode: grapl-integration-tests_default
  command: /bin/bash -c "sleep 30 && source venv/bin/activate && cd grapl_e2e_tests && python3 ./main.py"
  env:
    - GRAPL_LOG_LEVEL=INFO
    - "BUCKET_PREFIX=local-grapl"
    - "IS_LOCAL=True"
    - "MG_ALPHAS=grapl-master-graph-db:9080"
  depends:
    - integration-env

job=build-analyzer-executor:
  use: analyzer-executor-build
  mounts:
    - dist
  artifact:
    - ./dist/analyzer-executor/lambda.zip

job=run-analyzer-executor-unit-tests:
  use: analyzer-executor-build
  command: /bin/bash -c "source venv/bin/activate && cd analyzer_executor && py.test -n auto -m 'not integration_test'"

job=build-engagement-creator:
  use: engagement-creator-build
  mounts:
    - dist
  artifact:
    - ./dist/engagement-creator/lambda.zip

job=run-engagement-creator-unit-tests:
  use: engagement-creator-build
  command: /bin/bash -c "source venv/bin/activate && cd engagement-creator && py.test -n auto -m 'not integration_test'"

job=build-engagement-edge:
  use: engagement-edge-build
  mounts:
    - dist
  artifact:
    - ./dist/engagement-edge/lambda.zip

job=run-engagement-edge-unit-tests:
  use: engagement-edge-build
  command: /bin/bash -c "source venv/bin/activate && cd engagement_edge && py.test -n auto -m 'not integration_test'"

job=build-dgraph-ttl:
  use: dgraph-ttl-build
  mounts:
    - dist
  artifact:
    - ./dist/dgraph-ttl/lambda.zip

job=run-dgraph-ttl-unit-tests:
  use: dgraph-ttl-build
  command: /bin/bash -c "source venv/bin/activate && cd dgraph-ttl && py.test -n auto -m 'not integration_test'"

job=build-model-plugin-deployer:
  use: model-plugin-deployer-build
  mounts:
    - dist
  artifact:
    - ./dist/model-plugin-deployer/lambda.zip

job=run-model-plugin-deployer-unit-tests:
  use: model-plugin-deployer-build
  command: /bin/bash -c "source venv/bin/activate && cd model-plugin-deployer && py.test -n auto -m 'not integration_test'"

# js jobs

# TODO: more normal build job for engagement-view w/ deploy artifact

job=run-engagement-view-unit-tests:
  use: engagement-view-build
  command: /bin/bash -c "CI=true yarn test"

job=build-graphql-endpoint:
  use: graphql-endpoint-build
  mounts:
    - dist
  artifact:
    - ./dist/graphql-endpoint/lambda.zip

job=build-grapl-cdk:
  use: grapl-cdk-build

# TODO: graphql endpoint unit tests

# TODO: graphql endpoint integration tests

#
# aliases
#

alias=rust:
  tasks:
    - build-rust
    - "analyzer-dispatcher:tag"
    - "generic-subgraph-generator:tag"
    - "graph-merger:tag"
    - "metric-forwarder:tag"
    - "node-identifier:tag"
    - "node-identifier-retry-handler:tag"
    - "sysmon-subgraph-generator:tag"
  annotations:
    description: "Build artifacts and images for rust services"

alias=clean-rust-build:
  tasks:
    - "rust-build:rm"
  annotations:
    description: "Delete the rust build image"

alias=rust-unit-tests:
  tasks:
    - run-rust-unit-tests
  annotations:
    description: "Run the rust unit tests"

alias=rust-integration-tests:
  tasks:
    - run-node-identifier-integration-tests
  annotations:
    description: "Run the rust integration tests"

alias=python:
  tasks:
    - build-analyzer-deployer
    - build-analyzer-executor
    - build-engagement-creator
    - build-engagement-edge
    - build-dgraph-ttl
    - build-model-plugin-deployer
    - "analyzer-deployer:tag"
    - "analyzer-executor:tag"
    - "engagement-creator:tag"
    - "engagement-edge:tag"
    - "dgraph-ttl:tag"
    - "model-plugin-deployer:tag"
    - "grapl-notebook:tag"
    - "graph-provision:tag"
    - "dynamodb-provision:tag"
  annotations:
    description: "Build artifacts and images for python services"

alias=clean-python-build:
  tasks:
    - "analyzer-deployer-build:rm"
    - "analyzer-executor-build:rm"
    - "engagement-creator-build:rm"
    - "engagement-edge-build:rm"
    - "dgraph-ttl-build:rm"
    - "model-plugin-deployer-build:rm"
    - "grapl-analyzerlib-build:rm"
    - "grapl-common-build:rm"
    - "graph-descriptions-build:rm"
    - "python-build:rm"
  annotations:
    description: "Delete the python build images"

alias=python-unit-tests:
  tasks:
    - run-grapl-common-unit-tests
    - run-grapl-analyzerlib-unit-tests
    - run-analyzer-deployer-unit-tests
    - run-analyzer-executor-unit-tests
    - run-engagement-creator-unit-tests
    - run-engagement-edge-unit-tests
    - run-dgraph-ttl-unit-tests
    - run-model-plugin-deployer-unit-tests
  annotations:
    description: "Run the python unit tests"

alias=python-integration-tests:
  tasks:
    - run-grapl-analyzerlib-integration-tests
    - run-analyzer-deployer-integration-tests
  annotations:
    description: "Run the python integration tests"

alias=js:
  tasks:
    - build-graphql-endpoint
    - build-grapl-cdk
    - "graphql-endpoint:tag"
    - "engagement-view:tag"
  annotations:
    description: "Build artifacts and images for js services"

alias=clean-js-build:
  tasks:
    - "grapl-cdk-build:rm"
    - "graphql-endpoint-build:rm"
  annotations:
    description: "Delete the js build images"

alias=js-unit-tests:
  tasks:
    - run-engagement-view-unit-tests
  annotations:
    description: "Run the js unit tests"

# TODO: js integration tests

alias=build:
  tasks:
    - rust
    - python
    - js
  annotations:
    description: "Build artifacts and images for all services"

alias=clean-build:
  tasks:
    - clean-rust-build
    - clean-python-build
    - clean-js-build
  annotations:
    description: "Delete all the build images"

alias=unit-tests:
  tasks:
    - rust-unit-tests
    - python-unit-tests
    - js-unit-tests
  annotations:
    description: "Run all the unit tests"

alias=integration-tests:
  tasks:
    - rust-integration-tests
    - python-integration-tests
    - run-e2e-integration-tests
    # TODO: js integration tests
  annotations:
    description: "Run all the integration tests"

alias=python-typecheck:
  tasks:
    # TODO: Add more and more here!
    - run-analyzer-deployer-typecheck
    - run-engagement-creator-typecheck
    - run-grapl-common-typecheck
  annotations:
    description: "Run mypy or pytype type checks on a subset of our Python libs/services"
