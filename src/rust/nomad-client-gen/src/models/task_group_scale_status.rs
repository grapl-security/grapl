/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TaskGroupScaleStatus {
    #[serde(rename = "Desired", skip_serializing_if = "Option::is_none")]
    pub desired: Option<i32>,
    #[serde(rename = "Events", skip_serializing_if = "Option::is_none")]
    pub events: Option<Vec<crate::models::ScalingEvent>>,
    #[serde(rename = "Healthy", skip_serializing_if = "Option::is_none")]
    pub healthy: Option<i32>,
    #[serde(rename = "Placed", skip_serializing_if = "Option::is_none")]
    pub placed: Option<i32>,
    #[serde(rename = "Running", skip_serializing_if = "Option::is_none")]
    pub running: Option<i32>,
    #[serde(rename = "Unhealthy", skip_serializing_if = "Option::is_none")]
    pub unhealthy: Option<i32>,
}

impl TaskGroupScaleStatus {
    pub fn new() -> TaskGroupScaleStatus {
        TaskGroupScaleStatus {
            desired: None,
            events: None,
            healthy: None,
            placed: None,
            running: None,
            unhealthy: None,
        }
    }
}
