syntax = "proto3";

package graplinc.common.v1beta1;

// An RFC 4122 UUID, encoded by splitting the 128 bit representation into two 64
// bit values
message Uuid {
  // Least significant bytes
  fixed64 lsb = 1;

  // Most significant bytes
  fixed64 msb = 2;
}

//
// Note: we've implemented some time primitives here instead of using
// google.protobuf.{Duration, Timestamp} because Google's Duration is
// _signed_. This leads to awkward, subtle complexities in time handling
// code. Moreover, Google's Timestamp type is not implemented in terms of the
// Duration type, which seems odd. We've chosen here to represent a Duration as
// an unsigned measure of time (e.g. a length) and we've implemented Timestamp
// in terms of Duration. We believe this maps more cleanly to physical reality,
// and to how Rust std::time code works. We think this will make implementing
// correct time handling code across languages (e.g. Rust, Python, etc.) easier,
// leading to more robust systems.
//

// An interval of time measured in seconds, with (up to) nanosecond subsecond
// precision.
message Duration {
  // The number of seconds
  fixed64 seconds = 1;

  // The number of nanoseconds in the subsecond part (max 10^9 - 1)
  fixed32 nanos = 2;
}

// A specific point in time, expressed as a duration before or since unix epoch
// (1970-01-01T00:00:00.000000000Z), with (up to) nanosecond subsecond
// precision.
//
// NOTE: timestamps are assumed to be UTC. Applications are responsible for
// doing their own timezone conversion if necessary.
message Timestamp {
  // A Timestamp contains a duration that specifies a particular instant in time
  // either before or since unix epoch.
  oneof duration {
    // The interval of time between unix epoch and when this event took
    // place. This variant indicates the event took place since unix epoch
    // (including exactly 0ns "since").
    Duration since_epoch = 1;

    // The interval of time between when this event took place and unix
    // epoch. This variant indicates the event took place before unix epoch.
    Duration before_epoch = 2;
  }
}
