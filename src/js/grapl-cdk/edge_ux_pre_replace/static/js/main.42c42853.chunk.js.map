{"version":3,"sources":["components/login/styles.tsx","services/constants.ts","services/fetch.ts","services/login/loginService.tsx","components/login/utils/passwordHashing.tsx","components/login/Login.tsx","components/graphDisplay/graphVizualization/nodeColoring.tsx","components/graphDisplay/graphVizualization/nodeCalcs.tsx","components/graphDisplay/graphVizualization/linkCalcs.tsx","components/graphDisplay/graphLayout/labels.tsx","services/graphQLRequests/retrieveGraphReq.tsx","components/graphDisplay/graphLayout/graph_traverse.tsx","components/graphDisplay/graphLayout/vizGraphFromLensScope.tsx","components/graphDisplay/graphLayout/mapNodeProps.tsx","components/graphDisplay/graphLayout/mergeGraphs.tsx","components/graphDisplay/graphUpdates/updateGraph.tsx","components/graphDisplay/graphVizualization/graphColors.tsx","components/graphDisplay/GraphDisplay.tsx","components/engagementView/sidebar/tables/nodeTable/nodeTableHeader.tsx","components/engagementView/sidebar/tables/nodeTable/nodeTableStyles.tsx","components/engagementView/sidebar/tables/nodeTable/NodeTable.tsx","components/engagementView/sidebar/tables/lensTable/lensTableStyles.tsx","components/engagementView/sidebar/tables/lensTable/selectLens.tsx","components/engagementView/sidebar/tables/lensTable/lensTable.tsx","services/graphQLRequests/getLenses.tsx","components/engagementView/sidebar/tables/toggleLensTable.tsx","components/engagementView/sidebar/tables/toggleNodeDetailTable.tsx","components/engagementView/sidebar/LensAndNodeTableContainer.tsx","components/reusableComponents/graplHeader/styles.tsx","components/reusableComponents/graplHeader/GraplHeader.tsx","components/reusableComponents/notifications/Notifications.tsx","components/reusableComponents/notifications/styles.tsx","services/login/checkLoginService.ts","components/graphDisplay/GraphDisplayStyles.tsx","components/engagementView/EngagementView.tsx","components/dashboard/styles.tsx","services/sagemakerNotebook/notebookService.ts","components/dashboard/Dashboard.tsx","services/uploadPlugin/uploadFilesToDgraph.tsx","components/uploadPlugin/uploadPluginStyles.tsx","components/uploadPlugin/utils/uploadPlugins.tsx","services/uploadPlugin/getPluginList.tsx","services/uploadPlugin/deletePlugin.tsx","components/uploadPlugin/utils/pluginTable.tsx","components/uploadPlugin/UploadPluginView.tsx","routes/index.ts","routes/routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["loginStyles","makeStyles","theme","createStyles","valErrorMsg","marginLeft","color","fontSize","DEV_API_EDGES","auth","graphQL","modelPluginEdge","apiFetchReq","urlSlug","a","method","fetch","credentials","headers","Headers","catch","e","console","warn","Error","response","json","apiPostRequestWithBody","body","GraphqlEndpointClient","query","variables","JSON","stringify","log","lensName","this","getScopeQuery","lens_name","resp","loginService","username","password","loginBody","loginData","sha256","message","msgBuffer","TextEncoder","encode","crypto","subtle","digest","hashBuffer","hashArray","Array","from","Uint8Array","map","b","toString","slice","join","sha256WithPepper","hashed","i","LogIn","_","classes","validationSchema","Yup","shape","userName","required","React","useState","loginFailed","state","setState","className","initialValues","onSubmit","values","window","history","replaceState","location","reload","errors","touched","name","type","placeholder","riskOutline","risk","calcNodeRiskPercentile","_nodeRisk","_allRisks","nodeRisk","riskIndex","allRisks","n","sort","undefined","length","Math","floor","findNode","id","nodes","node","calcLinkRiskPercentile","link","graph","linkRisk","Graph","sourceNode","source","targetNode","target","sourceRisk","risk_score","targetRisk","round","error","calcLinkRisk","calcLinkColor","getNodeLabel","nodeType","display","retrieveGraph","lens","client","getLensScope","lensWithScopeData","scope","mapEdges","f","prop","Object","prototype","hasOwnProperty","call","possibleNeighbor","isArray","neighbor","uid","mapEdgeProps","traverseNodes","callback","traverseNeighbors","edgeName","getNodeType","dgraphType","dgraph_type","vizGraphFromLensScope","vizGraphData","links","vizNodeMap","Map","vizNode","fromNode","toNode","push","nodeLabel","strippedNode","riskScore","analyzerNames","nodeRiskList","riskNode","analyzer_name","edge","_neighbor","set","index","mapNodeProps","nodeProp","mergeNodes","newNode","merged","nodeWithoutVizFormatting","_node","mergeGraphs","curGraph","updateGraph","updated","outputGraph","get","_link","setLink","newLink","getLink","forEach","neighbors","Set","add","engagementState","setEngagementState","curLensName","then","updatedGraph","mergeUpdatedGraph","graphData","colors","GraphDisplay","setCurNode","fgRef","useRef","defaultGraphDisplayState","updateGraphAndSetState","useEffect","interval","setInterval","clearInterval","data","useMemo","clickedNode","setClickedNode","highlightNodes","setHighlightNodes","highlightLinks","setHighlightLinks","hoverNode","setHoverNode","updateHighlight","useCallback","nodeClick","ctx","nodeHover","clear","nodeStyling","fx","x","fy","y","save","NODE_R","riskPercentile","nodeSize","beginPath","arc","PI","fillStyle","fill","nodeFillColor","label","min","measureText","width","font","labelBkgdDimensions","fillRect","textAlign","textBaseline","fillText","ref","nodeCanvasObject","nodeCanvasObjectMode","onNodeHover","onNodeClick","onNodeDragEnd","linkColor","has","linkWidth","linkDirectionalArrowLength","linkDirectionalArrowRelPos","calcLinkDirectionalArrowRelPos","linkDirectionalParticleSpeed","linkDirectionalParticleColor","linkDirectionalParticles","linkDirectionalParticleWidth","linkRiskPercentile","calcLinkParticleWidth","linkCanvasObjectMode","linkCanvasObject","start","end","textPos","relLink","maxTextLength","sqrt","pow","LABEL_NODE_MARGIN","textAngle","atan2","labelType","translate","rotate","restore","onLinkHover","warmupTicks","cooldownTicks","nodeTableHeader","styles","TableHead","TableRow","TableCell","align","tableHeader","useStyles","root","nodeTable","minWidth","backgroundColor","nodeTableData","nodeTableContainer","marginRight","NodeTable","hidden","displayNode","propName","includes","Date","toLocaleString","TableContainer","Table","TableBody","entries","nodeProperty","key","value","node_key","border","padding","backdrop","table","lensToggleBtn","height","margin","title","expand","header","pagination","tableHead","tableContainer","tableRow","background","SelectLens","props","component","Button","onClick","setLens","lens_type","score","lensTable","page","rowsPerPage","handleChangePage","handleChangeRowsPerPage","TablePagination","aria-label","rowsPerPageOptions","count","lenses","onChangePage","onChangeRowsPerPage","Number","getLenses","first","offset","gqlQuery","graphQLQuery","res","lensQueryData","ToggleLensTable","lensRetrievedState","setLensRetrievedState","toggled","toggleTableState","setToggleTableState","pageState","setPageState","rowsPerPageState","setRowsPerPageState","concat","event","parseInt","Backdrop","open","CircularProgress","Divider","ToggleNodeDetailTable","curNode","setToggle","NodeDetails","LensAndNodeTableContainer","justifyContent","textDecoration","GraplHeader","displayBtn","AppBar","position","Toolbar","Typography","variant","to","maxWidth","postion","button","LoginNotification","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Card","CardActionArea","CardContent","CardActions","size","checkLogin","drawerWidth","loggedIn","alignItems","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","headerTitle","headerContainer","close","EngagementView","curLens","setOpen","clsx","IconButton","noWrap","Drawer","anchor","paper","paragraph","EngagementUx","renderedOnce","fetchLoginAndSetState","dasboardStyles","zIndex","dashboard","flexDirection","borderRadius","textTransform","sagemaker","navSec","marginTop","help","getNotebookUrl","result","success","notebook_url","Dashboard","asyncSagemakerUrl","useAsync","loading","alert","uploadFilesToDgraph","payload","dgraphPayload","dgraphFileUpload","pluginFiles","Success","formContainer","btn","inputFiles","upload","succMsg","errMsg","pluginTable","boxShadow","uploadFormContainer","uploadForm","fontFamily","readFile","file","Promise","resolve","reject","reader","FileReader","addEventListener","fileRes","TextDecoder","decode","readAsText","Message","status","UploadForm","curFiles","fileMap","reads","fileRead","fileResult","path","webkitRelativePath","mozRelativePath","all","plugins","didSucceed","directory","webkitdirectory","mozdirectory","multiple","onChange","currentTarget","files","getPluginList","getPluginListReq","pluginList","plugin_list","deletePlugin","pluginName","plugins_to_delete","PluginTable","rows","toggle","setPage","setRowsPerPage","emptyRows","style","colSpan","newPage","UploadPlugin","Routes","exact","App","Boolean","hostname","match","darkTheme","createMuiTheme","palette","primary","main","rootElement","document","getElementById","ReactDOM","render","StrictMode","ThemeProvider","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42c42853.chunk.js","sourcesContent":["import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport const loginStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles(\n            {\n                valErrorMsg:{\n                    marginLeft: \".8rem\",\n                    color: \"red\",\n                    fontSize: \".75rem\"\n                }\n            }\n        )\n);\n","const DEV_API_EDGES = {\n    auth: \"auth\",\n    graphQL: \"graphQlEndpoint\",\n    modelPluginEdge: \"modelPluginDeployer\",\n};\n\nexport default DEV_API_EDGES;\n","import { Node } from \"types/CustomTypes\";\nimport DEV_API_EDGES from \"./constants\";\n\nexport const apiFetchReq = async (urlSlug: string, method = \"GET\") => {\n    const response = await fetch(urlSlug, {\n        method,\n        credentials: \"include\",\n        headers: new Headers({\n            \"Content-Type\": \"application/json\",\n        }),\n    }).catch((e) => {\n        console.warn(e);\n        throw new Error(`API Request Error: ${e}`);\n    });\n\n    return response.json();\n};\n\nexport const apiPostRequestWithBody = async (urlSlug: string, body: string) => {\n    const response = await fetch(urlSlug, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: new Headers({\n            \"Content-Type\": \"application/json\",\n        }),\n        body: body,\n    }).catch((e) => {\n        console.warn(e);\n        throw new Error(`Error with Post Request: ${e}`);\n    });\n\n    return response.json();\n};\n\ntype QueryResult = { [key: string]: any };\ninterface LensScope {\n    lens_name: string;\n    scope: Node[];\n}\n\nexport class GraphqlEndpointClient {\n    async query(\n        query: string,\n        variables?: { [key: string]: string }\n    ): Promise<QueryResult> {\n        const body = JSON.stringify({\n            query: query,\n            variables: variables || {},\n        });\n        const response = await apiPostRequestWithBody(\n            `${DEV_API_EDGES.graphQL}/graphql`,\n            body\n        );\n        if (response[\"errors\"]) {\n            console.log(response[\"errors\"]);\n            throw new Error(`Could not query GraphQL: ${response[\"errors\"]}`);\n        }\n        return response[\"data\"];\n    }\n\n    public async getLensScope(lensName: string): Promise<LensScope> {\n        const query = await this.getScopeQuery();\n        const resp = await this.query(query, { lens_name: lensName });\n        console.log(resp);\n        return resp[\"lens_scope\"] as LensScope;\n    }\n\n    async getScopeQuery() {\n        const query = `\n        {\n            lens_scope_query {\n                query_string\n            }\n        }\n        `;\n\n        const resp = await this.query(query);\n        return resp[\"lens_scope_query\"][\"query_string\"];\n    }\n}\n","import DEV_API_EDGES from '../constants';\nimport {apiPostRequestWithBody} from '../fetch';\n\nexport const loginService = async (username: string, password: string) => {\n    const loginBody = JSON.stringify({ 'username': username, 'password': password });\n\n    try {\n        const loginData = await apiPostRequestWithBody(`${DEV_API_EDGES.auth}/login`, loginBody)\n        return loginData['success'] === 'True';\n    } catch (e) {\n        console.log(\"Login Error\", e);\n        return false;\n    }\n};","async function sha256(message: string) {\n    // encode as UTF-8\n    const msgBuffer = new TextEncoder().encode(message);\n\n    // hash the message\n    const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer);\n\n    // convert ArrayBuffer to Array\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n\n    // convert bytes to hex string\n    return hashArray.map(b => ('00' + b.toString(16)).slice(-2)).join('');\n}\n\n\nexport const sha256WithPepper = async (username: string, password: string) => {\n    // The pepper only exists to prevent rainbow tables for extremely weak passwords\n    // Client side hashing itself is only to prevent cases where the password is\n    // exposed before it makes it into the password database\n    const pepper = \"f1dafbdcab924862a198deaa5b6bae29aef7f2a442f841da975f1c515529d254\";\n\n    let hashed = await sha256(password + pepper + username);\n\n    for (let i = 0; i < 5000; i++) {\n        hashed = await sha256(hashed)\n    }\n\n    return hashed\n};","import React from \"react\";\nimport * as Yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\n\nimport \"./LogIn.css\";\nimport { loginStyles } from \"./styles\";\nimport { LoginProps } from \"types/CustomTypes\";\nimport { loginService } from \"services/login/loginService\";\nimport { sha256WithPepper } from \"./utils/passwordHashing\";\n\nexport const LogIn = (_: LoginProps) => {\n\tconst useStyles = loginStyles;\n\n\tconst classes = useStyles();\n\n\tconst validationSchema = Yup.object().shape({\n\t\tuserName: Yup.string().required(\"Username Required\"),\n\t\tpassword: Yup.string().required(\"Password Required\"),\n\t});\n\n\tconst [state, setState] = React.useState({\n\t\tloginFailed: false,\n\t});\n\n\treturn (\n\t\t<div className=\"loginContainer\">\n\t\t\t<div className=\"grapl\"> Grapl </div>\n\n\t\t\t<div className=\"formContainer\">\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{ userName: \"\", password: \"\" }}\n\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\tonSubmit={async (values) => {\n\t\t\t\t\t\tconst password = await sha256WithPepper(\n\t\t\t\t\t\t\tvalues.userName,\n\t\t\t\t\t\t\tvalues.password\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst loginSuccess = await loginService(values.userName, password);\n\n\t\t\t\t\t\tif (loginSuccess === true) {\n\t\t\t\t\t\t\twindow.history.replaceState(\"#/login\", \"\", \"#/\");\n\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\tconsole.log(\"Logged In\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetState({\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tloginFailed: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ errors, touched }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<div className=\"welcomeBanner\">Welcome</div>\n\t\t\t\t\t\t\t<div className=\"loginText\">Log into your account</div>\n              \n\t\t\t\t\t\t\t<Field name=\"userName\" type=\"text\" placeholder=\"Username\" />\n\t\t\t\t\t\t\t{touched.userName && errors.userName && (\n\t\t\t\t\t\t\t\t<div className={classes.valErrorMsg}>{errors.userName}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Field name=\"password\" type=\"password\" placeholder=\"Password\" />{\" \"}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t{touched.password && errors.password && (\n\t\t\t\t\t\t\t\t<div className={classes.valErrorMsg}>{errors.password}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<button className=\"submitBtn\" type=\"submit\">\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{state.loginFailed && (\n\t\t\t\t\t\t\t\t<div className={classes.valErrorMsg}>Unsuccessful Login</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default LogIn;\n","export const nodeFillColor = (nodeType: string) => {\n\tswitch (nodeType) {\n\t\tcase \"Asset\":\n\t\t\treturn \"rgba(251, 154, 153, .8)\"; //#FB9A99\n\t\tcase \"File\":\n\t\t\treturn \"rgba(236, 189, 169, .8)\"; //#ECBDA9\n\t\tcase \"IpAddress\":\n\t\t\treturn \"rgba(253, 191, 111, .8)\"; //#6CF4AB\n\t\tcase \"IpConnections\":\n\t\t\treturn \"rgba(255, 241, 150, .8)\"; //#FFF196\n\t\tcase \"IpPort\":\n\t\t\treturn \"rgba(178, 223, 138, .8)\"; // #B2DF8A\n\t\tcase \"NetworkConnection\":\n\t\t\treturn \"rgba(166, 206, 227, .8)\"; //#A6CEE3\n\t\tcase \"Process\":\n\t\t\treturn \"rgba(31, 120, 180, .8)\"; // #1F78B4\n\t\tcase \"ProcessInboundConnection\":\n\t\t\treturn \"rgba(202, 178, 214, .8)\"; //#CAB2D6\n\t\tcase \"ProcessOutboundConnection\":\n\t\t\treturn \"rgba(106, 61, 154, .8)\"; //#6A3D9A\n\t\tcase \"Risk\":\n\t\t\treturn \"rgba(238, 238, 238, .8)\"; //#EEEEEE\n\t\tdefault:\n\t\t\treturn \"#42C6FF\";\n\t}\n};\n\nexport const riskOutline = (risk: number) => {\n\tif (risk >= 0 && risk <= 25) {\n\t\treturn \"#02D084\";\n\t}\n\tif (risk >= 26 && risk <= 50) {\n\t\treturn \"#13A5E3\";\n\t}\n\tif (risk >= 51 && risk <= 75) {\n\t\treturn \"#FFD773\";\n\t}\n\tif (risk >= 76 && risk <= 100) {\n\t\treturn \"#E50F14\";\n\t}\n};\n\n","import { VizGraph, VizNode } from \"../../../types/CustomTypes\";\n\nexport const calcNodeRiskPercentile = (\n\t_nodeRisk: number | { risk: number },\n\t_allRisks: any\n): number => {\n\tlet nodeRisk = _nodeRisk;\n\tlet riskIndex = 0;\n\n\tconst allRisks = _allRisks\n\t\t.map((n: any) => n || 0)\n\t\t.sort((a: number, b: number) => a - b);\n\n\tif (typeof _nodeRisk === \"object\") {\n\t\tnodeRisk = _nodeRisk.risk;\n\t}\n\tif (nodeRisk === undefined || nodeRisk === 0 || allRisks.length === 0) {\n\t\treturn 0;\n\t}\n\n\tfor (const risk of allRisks) {\n\t\tif (nodeRisk >= risk) {\n\t\t\triskIndex += 1;\n\t\t}\n\t}\n\treturn Math.floor((riskIndex / allRisks.length) * 100);\n};\n\nexport const nodeSize = (node: VizNode, graphData: VizGraph): number => {\n\tconst nodes = [...graphData.nodes].map((node) => node.risk);\n\tconst _node = node as any;\n\n\tconst riskPercentile = calcNodeRiskPercentile(_node.risk_score, nodes);\n\n\tif (riskPercentile >= 75) {\n\t\treturn 7;\n\t} else if (riskPercentile >= 50) {\n\t\treturn 6;\n\t} else if (riskPercentile >= 25) {\n\t\treturn 5;\n\t} else {\n\t\treturn 4;\n\t}\n};\n","import { VizGraph, Link, VizNode } from \"../../../types/CustomTypes\";\nimport { calcNodeRiskPercentile } from \"./nodeCalcs\";\nimport { riskOutline } from \"./nodeColoring\";\n\nconst findNode = (id: number, nodes: VizNode[]) => {\n\tfor (const node of nodes || []) {\n\t\tif (node.id === id) {\n\t\t\treturn node;\n\t\t}\n\t}\n\treturn null;\n};\n\nexport const calcLinkRisk = (link: Link, Graph: VizGraph) => {\n\t\tlet sourceNode: any =\n\t\t\tfindNode(link.source, Graph.nodes) || \n\t\t\tfindNode((link as any).source.name, Graph.nodes);\n\t\tlet targetNode: any=\n\t\t\tfindNode(link.target as any, Graph.nodes) ||\n\t\t\tfindNode((link as any).target.name as any, Graph.nodes);\n\n\tconst sourceRisk: number = (sourceNode.risk_score) || 0;\n\tconst targetRisk: number = (targetNode.risk_score) || 0;\n\n\tif (!sourceNode || !targetNode) {\n\t\tconsole.error(\n\t\t\t\"Missing srcNode/dstNode\",\n\t\t\tsourceNode,\n\t\t\tlink.source,\n\t\t\ttargetNode,\n\t\t\tGraph.nodes\n\t\t);\n\t\treturn 0;\n\t}\n\treturn Math.round((sourceRisk + targetRisk) / 2);\n};\n\nexport const calcLinkRiskPercentile = (link: Link, graph: VizGraph) => {\n\tconst linkRisk = calcLinkRisk(link, graph);\n\tconst nodes = [...graph.nodes].map((node) => node.risk);\n\n\treturn calcNodeRiskPercentile(linkRisk, nodes);\n};\n\nexport const calcLinkColor = (link: Link, graph: VizGraph): string => {\t\n    const risk = calcLinkRiskPercentile(link, graph);\n\treturn riskOutline(risk) as string;   \n};\n\t\nexport const calcLinkParticleWidth = (link: Link, graph: VizGraph): number => {\n\tconst linkRiskPercentile = calcLinkRiskPercentile(link, graph);\n\tif (linkRiskPercentile >= 75) {\n\t\treturn 5;\n\t} else if (linkRiskPercentile >= 50) {\n\t\treturn 4;\n\t} else if (linkRiskPercentile >= 25) {\n\t\treturn 3;\n\t} else {\n\t\treturn 2;\n\t}\n};\n\nexport const calcLinkDirectionalArrowRelPos = (link: Link, graph: VizGraph) => {\n\tconst _link = link as any; \n    const node = \n        findNode(_link.target.uid, graph.nodes);\n\n    if (node === null || node.risk === 0) {\n        return 1.0\n    }\n\n\tconst nodes = [...graph.nodes].map(node => node.risk);\n\t\n    const riskPercentile = calcNodeRiskPercentile(node.risk_score as any, nodes);\n\n    if (riskPercentile >= 75) {\n        return 0.95\n    } else if (riskPercentile >= 50) {\n        return 0.9\n    } else if (riskPercentile >= 25) {\n        return 0.85\n    } else {\n        return 1.0\n    }\n};","import { NodeProperties } from \"../../../types/CustomTypes\";\n\nconst getNodeLabel = (nodeType: string, node: NodeProperties) => {\n\tconst _node = node;\n\treturn _node.display || nodeType;\n};\n\nconst getLinkLabel = (labelType: string) => {\n\tif (labelType === \"children\") {\n\t\treturn \"executed\";\n\t}\n\treturn labelType;\n};\n\nexport { getNodeLabel, getLinkLabel };\n","import {Node} from '../../types/CustomTypes';\n\nimport {GraphqlEndpointClient} from '../fetch';\n\nexport const retrieveGraph = async (lens: string): Promise<Node[]> => {\n    const client = new GraphqlEndpointClient();\n    const lensWithScopeData = await client.getLensScope(lens);\n    return lensWithScopeData.scope;\n};\n","import { NodeProperties, NodeEdges } from \"types/CustomTypes\";\n\nconst _mapGraph = <T extends NodeProperties & NodeEdges>(\n\tnode: T,\n\tvisited: Set<string>,\n\tf: (node: T, prop: string, neighbor: T) => void\n) => {\n\tmapEdgeProps(node, (edgeName: string, neighbor: T) => {\n\t\tif (visited.has(node.uid + edgeName + neighbor.uid)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvisited.add(node.uid + edgeName + neighbor.uid);\n\n\t\tf(node, edgeName, neighbor);\n\t\t_mapGraph(neighbor, visited, f);\n\t});\n};\n\nexport const mapGraph = <T extends NodeProperties & NodeEdges>(\n\tnode: T,\n\tf: (node: T, prop: string, neighbor: T) => void\n) => {\n\tconst visited: Set<string> = new Set();\n\tmapEdgeProps(node, (edgeName: string, neighbor: T) => {\n\t\tf(node, edgeName, neighbor);\n\t\t_mapGraph(neighbor, visited, f);\n\t});\n};\n\n// f Type = <T extends NodeProperties & NodeEdges>(prop:string, neighbor: BaseNodeProperties) => void)\n// Given a node, call 'f' on any of its neighbors\nexport const mapEdges = <T extends NodeProperties & NodeEdges>(\n\tnode: T,\n\tf: (prop: string, neighbor: T) => void\n) => {\n\tfor (const prop in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, prop)) {\n\t\t\tconst possibleNeighbor = node[prop] as any;\n\t\t\tif (Array.isArray(possibleNeighbor)) {\n\t\t\t\tfor (const neighbor of possibleNeighbor) {\n\t\t\t\t\tif (neighbor.uid !== undefined) {\n\t\t\t\t\t\tf(prop, neighbor);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (possibleNeighbor && possibleNeighbor.uid !== undefined) {\n\t\t\t\t\tf(prop, possibleNeighbor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const mapEdgeProps = <T extends NodeProperties & NodeEdges>(\n\tnode: T,\n\tf: (prop: string, neighbor: T) => void\n) => {\n\tfor (const prop in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, prop)) {\n\t\t\tconst possibleNeighbor = (node as any)[prop];\n\t\t\tif (Array.isArray(possibleNeighbor)) {\n\t\t\t\tfor (const neighbor of possibleNeighbor) {\n\t\t\t\t\tif (neighbor.uid !== undefined) {\n\t\t\t\t\t\tf(prop, neighbor);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (possibleNeighbor && possibleNeighbor.uid !== undefined) {\n\t\t\t\t\tf(prop, possibleNeighbor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const traverseNodes = <T extends NodeProperties & NodeEdges>(\n\tnode: T,\n\tcallback: (node: T) => void\n) => {\n\tcallback(node);\n\tmapEdges(node, (_, neighbor) => {\n\t\ttraverseNodes(neighbor, callback);\n\t});\n};\n\nexport const traverseNeighbors = <T extends NodeProperties & NodeEdges>(\n\tnode: T,\n\tcallback: (node: T, prop: string, neighbor: T) => void\n) => {\n\tmapEdges(node, (edgeName, neighbor) => {\n\t\tcallback(node, edgeName, neighbor);\n\t\ttraverseNeighbors(neighbor, callback);\n\t});\n};\n","import { traverseNodes, traverseNeighbors, mapEdges } from \"./graph_traverse\";\nimport { getNodeLabel } from \"./labels\";\nimport {\n\tLink,\n\tVizGraph,\n\tBaseNodeProperties,\n\tVizNode,\n\tNode,\n\tRisk,\n} from \"../../../types/CustomTypes\";\n\nexport const getNodeType = (node: BaseNodeProperties) => {\n\tconst dgraphType = node.dgraph_type;\n\n\tif (dgraphType) {\n\t\tif (Array.isArray(dgraphType)) {\n\t\t\treturn dgraphType[0];\n\t\t}\n\t\treturn dgraphType;\n\t}\n\n\tconsole.warn(\"Unable to find type for node \", node);\n\treturn \"Unknown Type\";\n};\n\nexport const vizGraphFromLensScope = (vizGraphData: Node[]): VizGraph => {\n\tconst nodes: VizNode[] = [];\n\tconst links: Link[] = [];\n\tconst vizNodeMap: Map<number, VizNode> = new Map();\n\n\tfor (const vizNode of vizGraphData) {\n\t\ttraverseNeighbors(vizNode, (fromNode, edgeName, toNode) => {\n\t\t\tif (edgeName !== \"scope\") {\n\t\t\t\tif (\n\t\t\t\t\tgetNodeType(fromNode) === \"Unknown\" ||\n\t\t\t\t\tgetNodeType(toNode) === \"Unknown\" ||\n\t\t\t\t\tgetNodeType(fromNode) === \"Risk\" ||\n\t\t\t\t\tgetNodeType(toNode) === \"Risk\"\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlinks.push({\n\t\t\t\t\tsource: fromNode.uid,\n\t\t\t\t\tname: edgeName,\n\t\t\t\t\ttarget: toNode.uid,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\ttraverseNodes(vizNode, (node) => {\n\t\t\tconst nodeType = getNodeType(node);\n\n\t\t\tif (nodeType === \"Unknown\" || nodeType === \"Risk\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nodeLabel = getNodeLabel(nodeType, node);\n\t\t\tconst strippedNode = { ...node };\n\n\t\t\tlet riskScore = (node[\"risk\"] || 0) as number;\n\t\t\tlet analyzerNames = \"\";\n\t\t\tlet nodeRiskList = (node[\"risks\"] || []) as Risk[];\n\n\t\t\tfor (const riskNode of nodeRiskList) {\n\t\t\t\triskScore += riskNode.risk_score || 0;\n\n\t\t\t\tif (analyzerNames && riskNode.analyzer_name) {\n\t\t\t\t\tanalyzerNames += \", \";\n\t\t\t\t}\n\t\t\t\tanalyzerNames += riskNode.analyzer_name || \"\";\n\t\t\t}\n\n\t\t\tmapEdges(node, (edge: string, _neighbor: Node) => {\n\t\t\t\t// The stripped node is converted to another type, so we can cast to any here\n\t\t\t\t(strippedNode as any)[edge] = undefined;\n\t\t\t});\n\n\t\t\tconst vizNode = {\n\t\t\t\tname: node.uid,\n\t\t\t\t...strippedNode,\n\t\t\t\trisk_score: riskScore,\n\t\t\t\tanalyzerNames,\n\t\t\t\tid: node.uid,\n\t\t\t\tnodeType,\n\t\t\t\tnodeLabel,\n\t\t\t}\n\t\t\tvizNodeMap.set(node.uid, (vizNode as unknown) as VizNode); // as unknown handles destructuring.\n\t\t});\n\t}\n\n\t// Because \"nodes\" is an array object we need to convert our data to use the \n\t// id property values of entries in the array instead of the indexes of the array.\n\tconst index = {} as { [key: number]: VizNode };\n\t\n\tfor (const vizNode of vizNodeMap.values()) {\n\t\tnodes.push(vizNode);\n\t\tif(!index[vizNode.uid]){\n\t\t\tindex[vizNode.uid] = vizNode;\n\t\t}\n\t}\n\n\t// Return data in format for react-force-graph display\n\treturn {\n\t\tnodes,\n\t\tlinks,\n\t\tindex,\n\t};\n};\n","import { NodeProperties } from \"../../../types/CustomTypes\";\n\nexport const mapNodeProps = (\n\tnode: NodeProperties,\n\tf: (propName: string) => void\n) => {\n\tfor (const prop in node) {\n\t\tconst nodeProp = node[prop];\n\n\t\tif (Object.prototype.hasOwnProperty.call(node, prop)) {\n\t\t\tif (Array.isArray(nodeProp)) {\n\t\t\t\tif (nodeProp.length > 0) {\n\t\t\t\t\tif (nodeProp[0].uid === undefined) {\n\t\t\t\t\t\tf(prop);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tf(prop);\n\t\t\t}\n\t\t}\n\t}\n};","import { mapNodeProps } from \"./mapNodeProps\";\nimport { VizGraph, VizNode } from \"../../../types/CustomTypes\";\n\n// if graph has updated, merge y into x\nexport const mergeNodes = (node: VizNode, newNode: VizNode) => {\n\tlet merged = false;\n\tlet nodeWithoutVizFormatting = {} as VizNode;\n\tfor(const prop in node){\n\t\tif(\n\t\t\tprop === \"fx\" || \n\t\t\tprop === \"fy\" ||\n\t\t\tprop === \"links\" ||\n\t\t\tprop === \"neighbors\" ||\n\t\t\tprop === \"vx\" || \n\t\t\tprop === \"vy\" || \n\t\t\tprop === \"x\" || \n\t\t\tprop === \"y\" || \n\t\t\tprop === \"vx\" || \n\t\t\tprop === \"vy\"\n\t\t){\n\t\t\tcontinue; \n\t\t} \n\n\t\tnodeWithoutVizFormatting[prop] = node[prop]; \n\t}\n\n\tconst _node = nodeWithoutVizFormatting;\n\n\tmapNodeProps(newNode, (prop: string) => {\n\t\tif (!Object.prototype.hasOwnProperty.call(_node, prop)) {\n\t\t\tif ((_node as any)[prop] !== (newNode as any)[prop]) {\n\t\t\t\t(_node as any)[prop] = (newNode as any)[prop];\n\t\t\t\tmerged = true;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t});\n\treturn merged;\n};\n\nexport const mergeGraphs = (\n\tcurGraph: VizGraph,\n\tupdateGraph: VizGraph\n): VizGraph | null => {\n\t// Merges two graphs into a new graph, returns 'null' when there are no new updates\n\n\tif (!updateGraph.nodes && !updateGraph.links) {\n\t\treturn null;\n\t}\n\n\tlet updated = false;\n\n\tconst outputGraph: VizGraph = { nodes: [], links: [], index: {} };\n\tconst nodes = new Map();\n\tconst links = new Map();\n\n\tfor (const node of curGraph.nodes) {\n\t\tnodes.set(node.uid, node);\n\t}\n\n\tfor (const newNode of updateGraph.nodes) {\n\t\tconst node = nodes.get(newNode.uid);\n\t\tif (node) {\n\t\t\tif (mergeNodes(node, newNode)) {\n\t\t\t\tupdated = true;\n\t\t\t}\n\t\t} else {\n\t\t\tnodes.set(newNode.uid, newNode);\n\t\t\tupdated = true;\n\t\t}\n\t}\n\n\tfor (const link of curGraph.links) {\n\t\tif (link) {\n\t\t\tconst _link = link as any; \n\t\t\tconst setLink = _link.source.uid + link.name + _link.target.uid; \n\t\t\tlinks.set(setLink, link);\n\t\t}\n\t}\n\n\tfor (const newLink of updateGraph.links) {\n\t\tconst getLink = newLink.source + newLink.name + newLink.target; \n\t\tconst link = links.get(getLink);\n\n\t\tif (!link) {\n\t\t\tlinks.set(newLink.source + newLink.name + newLink.target, newLink);\n\t\t\tupdated = true;\n\t\t}\n\t}\n\n\toutputGraph.nodes = Array.from(nodes.values());\n\toutputGraph.links = Array.from(links.values());\n\n\tfor (const node of outputGraph.nodes) {\n\t\toutputGraph.index[node.uid] = node;\n\t}\n\n\toutputGraph.links.forEach((link) => {\n\t\t// the graph should not be updated if the link is already in the index array\n\n\t\tconst sourceNode = outputGraph.index[link.source] as any;\n\t\tconst targetNode = outputGraph.index[link.target] as any;\n\n\t\tif (sourceNode === undefined || !targetNode === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t!sourceNode.neighbors && (sourceNode.neighbors = new Set());\n\t\t!targetNode.neighbors && (targetNode.neighbors = new Set());\n\n\t\tsourceNode.neighbors.add(targetNode);\n\t\ttargetNode.neighbors.add(sourceNode);\n\n\t\t!sourceNode.links && (sourceNode.links = new Set());\n\t\t!targetNode.links && (targetNode.links = new Set());\n\n\t\tsourceNode.links.add(link);\n\t\ttargetNode.links.add(link);\n\t});\n\n\tif (updated) {\n\t\treturn outputGraph;\n\t} else {\n\t\treturn null;\n\t}\n};\n","import { GraphState } from \"../../../types/GraphDisplayTypes\";\n\nimport { retrieveGraph } from \"../../../services/graphQLRequests/retrieveGraphReq\";\nimport { vizGraphFromLensScope } from \"../graphLayout/vizGraphFromLensScope\";\nimport { mergeGraphs } from \"../graphLayout/mergeGraphs\";\n\nexport const updateGraph = async (\n\tlensName: string,\n\tengagementState: GraphState,\n\tsetEngagementState: (engagementState: GraphState) => void\n) => {\n\tif (!lensName) {\n\t\tconsole.log(\"No lens names\");\n\t\treturn;\n\t}\n\n\tconst curLensName = engagementState.curLensName;\n\n\tawait retrieveGraph(lensName)\n\t\t.then(async (scope) => {\n\t\t\tconst updatedGraph = vizGraphFromLensScope(scope);\n\t\t\tconst mergeUpdatedGraph = mergeGraphs(engagementState.graphData, updatedGraph);\n\t\t\t\n\t\t\tif (mergeUpdatedGraph !== null) {\n\t\t\t\tif (curLensName === lensName) {\n\t\t\t\t\tsetEngagementState({\n\t\t\t\t\t\t...engagementState,\n\t\t\t\t\t\tcurLensName: lensName,\n\t\t\t\t\t\tgraphData: mergeUpdatedGraph,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsetEngagementState({\n\t\t\t\t\t\t...engagementState,\n\t\t\t\t\t\tcurLensName: lensName,\n\t\t\t\t\t\tgraphData: updatedGraph,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((e) => console.error(\"Failed to retrieveGraph \", e));\n};\n","export const colors = {\n\thoverNodeFill: \"#FADA63\",\n\tclickedNode: \"#42C6FF\",\n\tnodeLabelFill: \"rgba(0, 0, 0, 0.8)\",\n\tnodeLabelTxt: \"#ffffff\",\n\tlinkDirParticle: \"#919191\",\n\thighlightLink: \"#F1F1F1\",\n};","import React, {\n\tuseEffect,\n\tuseState,\n\tuseMemo,\n\tuseCallback,\n\tuseRef,\n} from \"react\";\nimport { ForceGraph2D } from \"react-force-graph\";\nimport { nodeFillColor, riskOutline } from \"./graphVizualization/nodeColoring\";\nimport {\n\tcalcLinkParticleWidth,\n\tcalcLinkColor,\n\tcalcLinkDirectionalArrowRelPos,\n} from \"./graphVizualization/linkCalcs\";\nimport { nodeSize } from \"./graphVizualization/nodeCalcs\";\nimport { getLinkLabel } from \"./graphLayout/labels\";\nimport { updateGraph } from \"./graphUpdates/updateGraph\";\nimport { Link, VizNode, VizGraph } from \"../../types/CustomTypes\";\nimport {\n\tGraphState,\n\tGraphDisplayState,\n\tGraphDisplayProps,\n} from \"../../types/GraphDisplayTypes\";\n\nimport { colors } from \"./graphVizualization/graphColors\";\n\ntype ClickedNodeState = VizNode | null;\n\nconst defaultGraphDisplayState = (\n\tlensName: string | null\n): GraphDisplayState => {\n\treturn {\n\t\tgraphData: { nodes: [], links: [], index: {} },\n\t\tcurLensName: lensName,\n\t};\n};\n\nconst defaultClickedState = (): ClickedNodeState => {\n\treturn null;\n};\n\nconst GraphDisplay = ({ lensName, setCurNode }: GraphDisplayProps) => {\n\tconst fgRef: any = useRef(); // fix graph to canvas\n\tconst [state, setState] = useState(defaultGraphDisplayState(lensName));\n\n\tasync function updateGraphAndSetState() {\n\t\tif (lensName) {\n\t\t\tawait updateGraph(lensName, state as GraphState, setState); // state is safe cast, check that lens name is not null\n\t\t}\n\t}\n\n\t// TODO is there a way to updateGraphAndSetState immediately on click?\n\n\tuseEffect(() => {\n\t\t// Set the initial state immediately\n\t\tupdateGraphAndSetState();\n\n\t\t// refresh every 10 seconds\n\t\tconst interval = setInterval(updateGraphAndSetState, 10000);\n\t\treturn () => clearInterval(interval);\n\t}, [lensName, state, setState]);\n\n\tconst data = useMemo(() => {\n\t\tconst graphData = state.graphData;\n\t\treturn graphData;\n\t}, [state]);\n\n\tconst [clickedNode, setClickedNode] = useState(defaultClickedState());\n\tconst [highlightNodes, setHighlightNodes] = useState(new Set());\n\tconst [highlightLinks, setHighlightLinks] = useState(new Set());\n\tconst [hoverNode, setHoverNode] = useState(null);\n\n\tconst updateHighlight = useCallback(() => {\n\t\tsetHighlightNodes(highlightNodes);\n\t\tsetHighlightLinks(highlightLinks);\n\t}, [highlightNodes, highlightLinks]);\n\n\tconst nodeClick = useCallback(\n\t\t(_node, ctx) => {\n\t\t\tconst node = _node as any;\n\t\t\tconst links = node.links;\n\t\t\tconst neighbors = node.neighbors;\n\n\t\t\t// remove neighbors and links for node detail table iteration (react can only iterate through arrays)\n\t\t\tdelete node.links;\n\t\t\tdelete node.neighbors;\n\n\t\t\tsetCurNode(node);\n\t\t\tsetClickedNode(node || null);\n\n\t\t\t// re-add neighbors for highlighting links\n\t\t\tnode.links = links;\n\t\t\tnode.neighbors = neighbors;\n\t\t},\n\t\t[setCurNode, setClickedNode]\n\t);\n\n\tconst nodeHover = useCallback(\n\t\t(node, ctx) => {\n\t\t\thighlightNodes.clear();\n\t\t\thighlightLinks.clear();\n\n\t\t\tif (node) {\n\t\t\t\tconst _node = node as any;\n\t\t\t\thighlightNodes.add(_node);\n\n\t\t\t\tif (!_node.neighbors) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t_node.neighbors.forEach((neighbor: VizNode) => {\n\t\t\t\t\thighlightNodes.add(neighbor);\n\t\t\t\t});\n\t\t\t\t_node.links.forEach((link: Link) => {\n\t\t\t\t\thighlightLinks.add(link);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetHoverNode((node as any) || null);\n\t\t\tupdateHighlight();\n\t\t},\n\t\t[setHoverNode, updateHighlight, highlightLinks, highlightNodes]\n\t);\n\n\tconst nodeStyling = useCallback(\n\t\t(node, ctx) => {\n\t\t\tnode.fx = node.x;\n\t\t\tnode.fy = node.y;\n\t\t\tctx.save();\n\n\t\t\tconst NODE_R = nodeSize(node, data);\n\n\t\t\t// Node Border Styling\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(node.x, node.y, NODE_R * 1.4, 0, 2 * Math.PI, false);\n\t\t\tctx.fillStyle =\n\t\t\t\tnode === hoverNode\n\t\t\t\t\t? colors.hoverNodeFill\n\t\t\t\t\t: riskOutline(node.risk_score);\n\t\t\tctx.fill();\n\t\t\tctx.save();\n\n\t\t\t// Node Fill Styling\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(node.x, node.y, NODE_R * 1.2, 0, 2 * Math.PI, false);\n\t\t\tctx.fillStyle =\n\t\t\t\tnode === clickedNode\n\t\t\t\t\t? colors.clickedNode\n\t\t\t\t\t: nodeFillColor(node.dgraph_type[0]);\n\t\t\tctx.fill();\n\t\t\tctx.save();\n\n\t\t\t// Node Label Styling\n\t\t\tconst label = node.nodeLabel;\n\n\t\t\tconst fontSize = Math.min(98, NODE_R / ctx.measureText(label).width);\n\t\t\tctx.font = `${fontSize + 5}px Roboto`;\n\n\t\t\tconst textWidth = ctx.measureText(label).width;\n\t\t\tconst labelBkgdDimensions = [textWidth, fontSize].map(\n\t\t\t\t(n) => n + fontSize * 0.2\n\t\t\t);\n\n\t\t\tctx.fillStyle = colors.nodeLabelFill;\n\t\t\tctx.fillRect(\n\t\t\t\tnode.x - labelBkgdDimensions[0] / 2, // x coordinate\n\t\t\t\tnode.y - labelBkgdDimensions[1] - 2.75, // y coordinate\n\t\t\t\tlabelBkgdDimensions[0] + 1.25, // rectangle width\n\t\t\t\tlabelBkgdDimensions[1] + 5.5 // rectangle height\n\t\t\t);\n\t\t\tctx.textAlign = \"center\";\n\t\t\tctx.textBaseline = \"middle\";\n\t\t\tctx.fillStyle = colors.nodeLabelTxt;\n\t\t\tctx.fillText(label, node.x, node.y);\n\t\t\tctx.save();\n\t\t},\n\t\t[data, clickedNode, hoverNode]\n\t);\n\n\tconst linkStyling = (link: any, ctx: any) => {\n\t\tconst MAX_FONT_SIZE = 8;\n\t\tconst LABEL_NODE_MARGIN = 12;\n\t\tconst start = link.source;\n\t\tconst end = link.target;\n\n\t\tlink.color = calcLinkColor(link, data);\n\n\t\t// Ignore unbounded links\n\t\tif (typeof start !== \"object\" || typeof end !== \"object\") return;\n\n\t\t// Edge label positioning calculations\n\t\tconst textPos = {\n\t\t\tx: start.x + (end.x - start.x) / 2,\n\t\t\ty: start.y + (end.y - start.y) / 2,\n\t\t};\n\n\t\tconst relLink = { x: end.x - start.x, y: end.y - start.y };\n\t\tconst maxTextLength =\n\t\t\tMath.sqrt(Math.pow(relLink.x, 2) + Math.pow(relLink.y, 2)) -\n\t\t\tLABEL_NODE_MARGIN * 8;\n\n\t\tlet textAngle = Math.atan2(relLink.y, relLink.x);\n\n\t\t// Maintain label vertical orientation for legibility\n\t\tif (textAngle > Math.PI / 2) textAngle = -(Math.PI - textAngle);\n\t\tif (textAngle < -Math.PI / 2) textAngle = -(-Math.PI - textAngle);\n\n\t\tconst label = getLinkLabel(link.name);\n\n\t\t// Estimate fontSize to fit in link length\n\t\tctx.font = \"50px Roboto\";\n\t\tconst fontSize = Math.min(\n\t\t\tMAX_FONT_SIZE,\n\t\t\tmaxTextLength / ctx.measureText(label).width\n\t\t);\n\t\tctx.font = `${fontSize + 5}px Roboto`;\n\n\t\t// Draw text label\n\t\tctx.save();\n\t\tctx.translate(textPos.x, textPos.y);\n\t\tctx.rotate(textAngle);\n\t\tctx.textAlign = \"center\";\n\t\tctx.textBaseline = \"middle\";\n\t\tctx.fillText(label, 0.75, 3); //Content, left/right, top/bottom\n\t\tctx.restore();\n\t};\n\n\treturn (\n\t\t<ForceGraph2D\n\t\t\tgraphData={data}\n\t\t\tref={fgRef} // fix graph to canvas\n\t\t\tnodeLabel={\"nodeType\"} // tooltip on hover, actual label is in nodeCanvasObject\n\t\t\tnodeCanvasObject={nodeStyling}\n\t\t\tnodeCanvasObjectMode={() => \"after\"}\n\t\t\tonNodeHover={nodeHover}\n\t\t\tonNodeClick={nodeClick}\n\t\t\tonNodeDragEnd={(node) => {\n\t\t\t\tnode.fx = node.x;\n\t\t\t\tnode.fy = node.y;\n\t\t\t}}\n\t\t\tlinkColor={(link) =>\n\t\t\t\thighlightLinks.has(link)\n\t\t\t\t\t? colors.highlightLink\n\t\t\t\t\t: calcLinkColor(link as Link, data as VizGraph)\n\t\t\t}\n\t\t\tlinkWidth={(link) => (highlightLinks.has(link) ? 5 : 4)}\n\t\t\tlinkDirectionalArrowLength={10}\n\t\t\tlinkDirectionalArrowRelPos={(link => {\n\t\t\t\tconst _link = link as any\n\t\t\t\treturn calcLinkDirectionalArrowRelPos(_link, data);\n\t\t\t})}\n\t\t\tlinkDirectionalParticleSpeed={0.005}\n\t\t\tlinkDirectionalParticleColor={(link) => colors.linkDirParticle}\n\t\t\tlinkDirectionalParticles={1}\n\t\t\tlinkDirectionalParticleWidth={(link) =>\n\t\t\t\thighlightLinks.has(link)\n\t\t\t\t\t? 4\n\t\t\t\t\t: calcLinkParticleWidth(link as Link, data as VizGraph) + 1\n\t\t\t}\n\t\t\tlinkCanvasObjectMode={() => \"after\"}\n\t\t\tlinkCanvasObject={linkStyling}\n\t\t\tonLinkHover={(link) => {\n\t\t\t\thighlightNodes.clear();\n\t\t\t\thighlightLinks.clear();\n\n\t\t\t\tif (link) {\n\t\t\t\t\thighlightLinks.add(link);\n\t\t\t\t\thighlightNodes.add(link.source);\n\t\t\t\t\thighlightNodes.add(link.target);\n\t\t\t\t}\n\t\t\t}}\n\t\t\twarmupTicks={100}\n\t\t\tcooldownTicks={100}\n\t\t/>\n\t);\n};\n\nexport default GraphDisplay;\n","import React from \"react\";\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { VizNode } from \"types/CustomTypes\";\n\nexport function nodeTableHeader(node: VizNode, styles: any) {\n\tif (node) {\n\t\treturn (\n\t\t\t<TableHead>\n\t\t\t\t<TableRow>\n\t\t\t\t\t<TableCell align=\"left\" className={styles.tableHeader}>\n\t\t\t\t\t\t<b> Property </b>\n\t\t\t\t\t</TableCell>\n\t\t\t\t\t<TableCell align=\"right\" className={styles.tableHeader}>\n\t\t\t\t\t\t<b> Value </b>\n\t\t\t\t\t</TableCell>\n\t\t\t\t</TableRow>\n\t\t\t</TableHead>\n\t\t);\n\t} else {\n\t\treturn <></>;\n\t}\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const nodeTableStyles = makeStyles({\n    root: {\n        fontSize: \".75em\"\n    },\n    nodeTable: {\n        minWidth: 450,\n    }, \n    tableHeader: {\n        fontSize: \".85rem\", \n        backgroundColor: \"#363434\"\n    }, \n    nodeTableData: {\n        fontSize: \".75rem\",\n        backgroundColor: \"#333333\"\n    },\n    nodeTableContainer:{\n        textAlign: \"center\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        width: \"95%\"\n    },\n});\n","import React from \"react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { mapEdgeProps } from \"../../../../graphDisplay/graphLayout/graph_traverse\";\nimport { mapNodeProps } from \"../../../../graphDisplay/graphLayout/mapNodeProps\";\n\nimport { OtherNodeProperties, VizNode } from \"types/CustomTypes\";\n\nimport { nodeTableHeader } from \"./nodeTableHeader\";\nimport { nodeTableStyles } from \"./nodeTableStyles\";\n\nconst useStyles = nodeTableStyles;\n\ntype NodeTableProps = {\n\tnode: VizNode;\n};\n\nconst NodeTable = ({ node }: NodeTableProps) => {\n\tconst classes = useStyles();\n\tconst hidden = new Set([\n\t\t\"id\",\n\t\t\"dgraph.type\",\n\t\t\"dgraph_type\",\n\t\t\"__indexColor\",\n\t\t\"risks\",\n\t\t\"uid\",\n\t\t\"scope\",\n\t\t\"name\",\n\t\t\"nodeType\",\n\t\t\"nodeLabel\",\n\t\t\"x\",\n\t\t\"y\",\n\t\t\"index\",\n\t\t\"vy\",\n\t\t\"vx\",\n\t\t\"fx\",\n\t\t\"fy\",\n\t\t\"links\", \n\t\t\"neighbors\",\n\t\t\"display\",\n\t]);\n\n\tmapEdgeProps(node as any, (edgeName: any, _neighbor: any) => {\n\t\thidden.add(edgeName);\n\t});\n\n\tconst displayNode = {} as OtherNodeProperties;\n\n\tmapNodeProps(node, (propName: string) => {\n\t\tconst prop = node[propName];\n\n\t\tif (!hidden.has(propName)) {\n\t\t\tif (prop) {\n\t\t\t\tif (propName.includes(\"_time\")) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdisplayNode[propName] = new Date(prop).toLocaleString();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tdisplayNode[propName] = prop;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdisplayNode[propName] = prop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn (\n\t\t<TableContainer className={classes.nodeTableContainer}>\n\t\t\t<Table>\n\t\t\t\t{nodeTableHeader(node, classes)}\n\t\t\t\t<TableBody>\n\t\t\t\t\t{Object.entries(displayNode).map((nodeProperty) => {\n\t\t\t\t\t\tconst [key, value] = nodeProperty;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TableRow key={node.node_key + key}>\n\t\t\t\t\t\t\t\t<TableCell className={classes.nodeTableData} align=\"left\">\n\t\t\t\t\t\t\t\t\t{key}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell className={classes.nodeTableData} align=\"right\">\n\t\t\t\t\t\t\t\t\t{value as any}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n}\n\nexport default NodeTable;\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\n\nexport const useStyles = makeStyles({\n\troot: {\n\t\tfontSize: \"1rem\",\n\t\tborder: 0,\n\t\tcolor: \"white\",\n\t\tpadding: \"0 30px\",\n\t},\n\tbackdrop: {\n\t\tcolor: \"#fff\",\n\t\tbackgroundColor: \"transparent\",\n\t\twidth: \"80%\",\n\t},\n\ttable: {\n\t\tminWidth: 450,\n\t\tbackgroundColor: \"#323232\"\n\t},\n\tlensToggleBtn: {\n\t\twidth: \".05%\",\n\t\theight: \"50%\",\n\t\tcolor: \"white\",\n\t\tmargin: \".5rem\",\n\t\tbackgroundColor: \"#424242\",\n\t},\n\ttitle: {\n\t\tmargin: \"1rem\",\n        fontSize: \"1.1rem\",\n        color: \"white\",\n\t},\n\texpand: {\n\t\tcolor: \"#42C6FF\",\n\t\tmargin: \"0px\",\n\t\twidth: \"1.5rem\",\n\t\theight: \"1.5rem\",\n\t},\n\theader: {\n\t\tdisplay: \"flex\", \t\n\t},\n\tlensName: {\n\t\tfontSize: \".7rem\",\n\t},\n\tpagination: {\n\t\tbackgroundColor: \"#323232\"\n\t},\n\ttableHead: {\n\t\tdisplay: \"flex\",\n\t\tcolor: \"white\",\n        fontSize: \".8rem\",\n\t},\n    tableContainer:{\n        textAlign: \"center\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n\t\twidth: \"95%\"\n\t},\n\ttableRow: {\n        background: \"#323232\",\n    },\n});\n","import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { useStyles } from './lensTableStyles';\n\nimport { SelectLensProps } from \"types/LensAndNodeTableTypes\"\n\n\nexport function SelectLens(props: SelectLensProps) {\n\tconst classes = useStyles();\n\t\n    \n\treturn (\n\t\t<TableRow className={classes.tableRow} key={props.uid}>\n\t\t\t<TableCell component=\"th\" scope=\"row\" align=\"left\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classes.lensName}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.setLens(props.lens);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{props.lens_type + \" :\\t\\t\" + props.lens}\n\t\t\t\t</Button>\n\t\t\t</TableCell>\n\n\t\t\t<TableCell component=\"th\" scope=\"row\" align=\"right\">\n\t\t\t\t{props.score}\n\t\t\t</TableCell>\n\t\t</TableRow>\n\t);\n}\n","import React from \"react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport { ClassNameMap } from \"@material-ui/styles/withStyles\";\nimport { SelectLens } from \"./selectLens\";\nimport { Lens } from \"types/CustomTypes\";\nimport { PaginationState } from \"types/CustomTypes\";\n\nexport const lensTable = (\n\tstate: PaginationState,\n\tpage: number,\n\trowsPerPage: number,\n\thandleChangePage: (\n\t\tevent: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\n\t\tpage: number\n\t) => void,\n\thandleChangeRowsPerPage: (\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n\t) => void,\n\tsetLens: (lens: string) => void,\n\tclasses: ClassNameMap<string>\n) => {\n\treturn (\n\t\t<TableContainer className={classes.tableContainer}>\n\t\t\t<TablePagination\n\t\t\t\tclassName={classes.pagination}\n\t\t\t\taria-label=\"pagination\"\n\t\t\t\trowsPerPageOptions={[5, 10, 25]}\n\t\t\t\tcomponent=\"div\"\n\t\t\t\tcount={state.lenses.length}\n\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\tpage={page}\n\t\t\t\tonChangePage={handleChangePage}\n\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\n\t\t\t/>\n\t\t\t<Table\n\t\t\t\tclassName={classes.table}\n\t\t\t\taria-label=\"lens-table\"\n\t\t\t\tkey={\"lensTable\"}\n\t\t\t>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t<b> Lens Name </b>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t\t\t\t<b> Risk </b>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\n\t\t\t\t<TableBody>\n\t\t\t\t\t{state.lenses\n\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\t\t\t\t\t\t.map((lens: Lens) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<SelectLens\n\t\t\t\t\t\t\t\t\tkey={Number(lens.uid)}\n\t\t\t\t\t\t\t\t\tuid={lens.uid}\n\t\t\t\t\t\t\t\t\tlens={lens.lens_name}\n\t\t\t\t\t\t\t\t\tlens_type={lens.lens_type}\n\t\t\t\t\t\t\t\t\tscore={lens.score}\n\t\t\t\t\t\t\t\t\tsetLens={setLens}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n};\n","import DEV_API_EDGES from \"../constants\";\nimport { apiPostRequestWithBody } from \"../fetch\";\n\nexport const getLenses = async (first: number, offset: number) => {\n\tconst gqlQuery = `\n        {\n            lenses(first: ${first}, offset: ${offset}) {\n                uid,\n                node_key,\n                lens_name,\n                score, \n                lens_type,\n            }\n        }\n    `;\n\n\tconst graphQLQuery = JSON.stringify({ query: gqlQuery });\n\n\tconst response = await apiPostRequestWithBody(\n\t\t`${DEV_API_EDGES.graphQL}/graphql`,\n\t\tgraphQLQuery\n\t)\n\t\t.then((res) => res)\n\t\t.then((res) => {\n\t\t\tif (res.errors) {\n\t\t\t\tconsole.error(\"Unable to retrieve lenses \", res.errors);\n\t\t\t\tres.data = { lenses: [] };\n\t\t\t}\n\t\t\treturn res;\n\t\t})\n\t\t.then((res) => res.data);\n\n\tconst lensQueryData = await response;\n\treturn lensQueryData;\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@material-ui/icons/KeyboardArrowUpOutlined';\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { lensTable } from \"./lensTable/lensTable\";\nimport { getLenses } from \"services/graphQLRequests/getLenses\";\n\nimport { ToggleLensTableProps, ToggleLensTableState } from \"types/CustomTypes\";\n\nimport { useStyles } from \"./lensTable/lensTableStyles\";\nconst defaultToggleLensTableState = (): ToggleLensTableState => {\n\treturn {\n\t\ttoggled: true,\n\t\tlenses: [],\n\t\tfirst: 100, // first is the page size\n\t\toffset: 0, // by default, start from page 0\n\t};\n};\n\nexport function ToggleLensTable({ setLens }: ToggleLensTableProps) {\n\tconst classes = useStyles();\n\n\tconst [lensRetrievedState, setLensRetrievedState] = useState(null);\n\tconst [toggleTableState, setToggleTableState] = useState(\n\t\tdefaultToggleLensTableState()\n\t);\n\tconst [pageState, setPageState] = useState(0);\n\tconst [rowsPerPageState, setRowsPerPageState] = useState(10);\n\n\tconst handleChangePage = (\n\t\tevent: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\n\t\tpage: number\n\t) => {\n\t\tsetPageState(page);\n\t};\n\n\tconst handleChangeRowsPerPage = (\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n\t) => {\n\t\tsetRowsPerPageState(parseInt(event.target.value, 10));\n\t\tsetPageState(0);\n\t};\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tgetLenses(toggleTableState.first, toggleTableState.offset).then(\n\t\t\t\t(response) => {\n\t\t\t\t\tif (response.lenses && response.lenses !== toggleTableState.lenses) {\n\t\t\t\t\t\tconst lenses = toggleTableState.lenses.concat(response.lenses);\n\t\t\t\t\t\tsetLensRetrievedState(lenses as any);\n\t\t\t\t\t\tsetToggleTableState({\n\t\t\t\t\t\t\t...toggleTableState,\n\t\t\t\t\t\t\toffset: toggleTableState.offset + response.lenses.length || 0,\n\t\t\t\t\t\t\tlenses,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}, 5000);\n\t\treturn () => clearInterval(interval);\n\t});\n\n\treturn (\n\t\n\t\t<>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<b className={classes.title}> Lenses </b>\n\t\t\t\t<Button\n\t\t\t\t\tclassName={classes.lensToggleBtn}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetToggleTableState({\n\t\t\t\t\t\t\t...toggleTableState,\n\t\t\t\t\t\t\ttoggled: !toggleTableState.toggled,\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{toggleTableState.toggled ?  <KeyboardArrowUpOutlinedIcon className={classes.expand}/> : <KeyboardArrowDownOutlinedIcon className={classes.expand}/> }\n\t\t\t\t</Button>\n\t\t\t</div>\n\n\t\t\t<div className=\"lensToggle\">\n\t\t\t\t{lensRetrievedState ? (\n\t\t\t\t\ttoggleTableState.toggled &&\n\t\t\t\t\tlensTable(\n\t\t\t\t\t\ttoggleTableState,\n\t\t\t\t\t\tpageState,\n\t\t\t\t\t\trowsPerPageState,\n\t\t\t\t\t\thandleChangePage,\n\t\t\t\t\t\thandleChangeRowsPerPage,\n\t\t\t\t\t\tsetLens,\n\t\t\t\t\t\tclasses\n\t\t\t\t\t)\n\t\t\t\t) : (\n\t\t\t\t\t<Backdrop className={classes.backdrop} open>\n\t\t\t\t\t\t<CircularProgress color=\"inherit\" />\n\t\t\t\t\t</Backdrop>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<Divider />\n\t\t</>\n\t);\n}\n","import React, { useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport KeyboardArrowDownOutlinedIcon from \"@material-ui/icons/KeyboardArrowDownOutlined\";\nimport KeyboardArrowUpOutlinedIcon from \"@material-ui/icons/KeyboardArrowUpOutlined\";\nimport { ToggleNodeTableProps } from \"types/LensAndNodeTableTypes\";\n\nimport { NodeDetails } from \"../LensAndNodeTableContainer\";\n\nimport { useStyles } from \"./lensTable/lensTableStyles\";\n\n\nexport function ToggleNodeDetailTable({ curNode }: ToggleNodeTableProps) {\n\tconst [toggled, setToggle] = useState(true);\n\tconst classes = useStyles();\n\treturn (\n\t\t<div>\n\t\t\t{curNode && (\n\t\t\t\t<div className={classes.header}>\n\t\t\t\t\t<b className={classes.title}> Node Details</b>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.lensToggleBtn}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetToggle((toggled) => !toggled);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{toggled === true ? (\n\t\t\t\t\t\t\t<KeyboardArrowUpOutlinedIcon className={classes.expand} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<KeyboardArrowDownOutlinedIcon className={classes.expand} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<div className=\"nodeToggle\">\n\t\t\t\t{toggled && curNode && <div>{<NodeDetails node={curNode} />}</div>}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\n\nimport NodeTable from './tables/nodeTable/NodeTable';\nimport { NodeDetailsProps, EngagementViewProps } from \"types/LensAndNodeTableTypes\";\n\nimport {ToggleLensTable} from \"./tables/toggleLensTable\";\nimport {ToggleNodeDetailTable} from './tables/toggleNodeDetailTable';\n\nexport const NodeDetails = ({node}: NodeDetailsProps) => {\n    return ( \n        <> <NodeTable node={node} /> </> \n    )\n}\n\nexport default function LensAndNodeTableContainer({setLens, curNode}: EngagementViewProps) {\n    return (\n        <>\n            <ToggleLensTable setLens={setLens}/>\n            <ToggleNodeDetailTable curNode={curNode}/>\n        </>\n    );\n}","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport const graplHeaderStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles({\n            root: {\n                display: \"flex\",\n            },\n            header: {\n                justifyContent: \"space-between\",\n            }, \n            link:{\n                color:\"#42C6FF\", \n                textDecoration: \"none\"\n            }\n        }\n    )\n);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Home from '@material-ui/icons/Home';\n\nimport {graplHeaderStyles} from './styles';\nimport {GraplHeaderProps} from 'types/GraplHeaderTypes'; \n\nconst useStyles = graplHeaderStyles; \n\nconst GraplHeader = (\n        {displayBtn}: GraplHeaderProps) => {\n            const classes = useStyles();\n            \n            return(\n                <>\n                    <AppBar position=\"static\">\n                        <Toolbar className = {classes.header}>\n                            <Typography variant=\"h6\" >\n                                GRAPL\n                            </Typography>\n                            {\n                                displayBtn &&\n                                    <Link to = \"/\" className = {classes.link}><Home /></Link>\n                            }\n                        </Toolbar>\n                    </AppBar>\n                </>\n    )    \n}\n\nexport default GraplHeader; ","import React from 'react';\n\nimport Popover from '@material-ui/core/Popover';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { notificationsStyles } from './styles';\n\nconst useStyles = notificationsStyles; \n\nexport default function LoginNotification() {\n    const classes = useStyles();\n\n    return (\n    <Popover \n        open={true}\n        anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        >\n        <Card variant=\"outlined\" className={classes.root}>\n            <CardActionArea>\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        You are not logged in and changes cannot be saved.\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n\n            <CardActions>\n                <Button \n                    className = {classes.button}\n                    size = \"small\" \n                    onClick = { \n                        () => {\n                            window.history.replaceState('#/', \"\", \"#/login\");\n                            window.location.reload();\n                        } \n                    }\n                > Login </Button>\n            </CardActions>\n        </Card>\n    </Popover>\n    );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const notificationsStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        postion: \"fixed\",\n    },\n    button: {\n        border: \"2px solid white\",\n        backgroundColor: \"#42c6ff\",\n    }\n});","import { apiFetchReq } from \"../fetch\";\r\nimport DEV_API_EDGES from \"../constants\";\r\n\r\nexport const checkLogin = async (): Promise<boolean | null> => {\r\n    try {\r\n        const loginData = await apiFetchReq(`${DEV_API_EDGES.auth}/checkLogin`, \"post\");\r\n        return loginData['success'] === 'True';\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n};\r\n","import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst drawerWidth = 500;\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: \"flex\"\n        },\n        button: {\n            backgroundColor: \"#42C6FF\",\n            margin: \"0.25rem\",\n            padding: \"0.20rem\",\n        }, \n        loggedIn: {\n            display: \"flex\",\n            alignItems: \"flex-end\",\n            justifyContent: \"flex-end\",\n        },\n        appBar: {\n            transition: theme.transitions.create([\"margin\", \"width\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen\n            })\n        },\n        appBarShift: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            transition: theme.transitions.create([\"margin\", \"width\"], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen\n            })\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            color: \"#42C6FF\"\n        },\n        hide: {\n            display: \"none\"\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0\n        },\n        drawerPaper: {\n            width: drawerWidth\n        },\n        drawerHeader: {\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: theme.spacing(0, 1),\n            // necessary for content to be below app bar\n            ...theme.mixins.toolbar,\n            justifyContent: \"flex-end\"\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n            transition: theme.transitions.create(\"margin\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen\n            }),\n            marginLeft: -drawerWidth\n        },\n        contentShift: {\n            transition: theme.transitions.create(\"margin\", {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen\n            }),\n            marginLeft: 0,\n        },\n        lensName:{\n            color:\"#EAFDFF\",\n            fontSize: \"1.5rem\", \n        },\n        headerTitle:{\n            fontSize: \"35px\",\n        }, \n        headerContainer: {\n            width: \"100vw\",\n            display: \"flex\",  \n            justifyContent: \"space-between\",\n        },\n        close:{\n            color:\"#42C6FF\",\n        },\n        link: {\n            color: \"#42C6FF\", \n            textDecoration: \"none\"\n        }\n    })\n);","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport Button from \"@material-ui/core/Button\";\nimport Home from \"@material-ui/icons/Home\";\n\nimport { VizNode } from \"types/CustomTypes\";\nimport GraphDisplay from \"../graphDisplay/GraphDisplay\";\nimport LensAndNodeTableContainer from \"./sidebar/LensAndNodeTableContainer\";\nimport { LoginNotification } from \"../reusableComponents\";\nimport { checkLogin } from \"../../services/login/checkLoginService\";\nimport { useStyles } from \"../graphDisplay/GraphDisplayStyles\";\ntype EngagementViewProps = {\n\tsetLens: (lens: string) => void;\n\tcurLens: string;\n\tcurNode: VizNode | null;\n};\n\nconst defaultEngagementState = (): EngagementUxState => {\n\treturn { curLens: \"\", curNode: null, loggedIn: true, renderedOnce: false };\n};\n\nexport default function EngagementView({\n\tsetLens,\n\tcurLens,\n\tcurNode,\n}: EngagementViewProps) {\n\tconst classes = useStyles();\n\n\tconst [open, setOpen] = React.useState(true);\n\n\tconst handleDrawerOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleDrawerClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar\n\t\t\t\tposition=\"fixed\"\n\t\t\t\tclassName={clsx(classes.appBar, { [classes.appBarShift]: open })}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName={clsx(classes.menuButton, open && classes.hide)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* // Menu Icon  */}\n\t\t\t\t\t\t&#9776;\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<div className={classes.headerContainer}>\n\t\t\t\t\t\t<Typography variant=\"h5\" noWrap>\n\t\t\t\t\t\t\t<b className={classes.headerTitle}> GRAPL </b>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Link to=\"/\" className={classes.link}>\n\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\n\t\t\t<Drawer\n\t\t\t\tclassName={classes.drawer}\n\t\t\t\tvariant=\"persistent\"\n\t\t\t\tanchor=\"left\"\n\t\t\t\topen={open}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className={classes.drawerHeader}>\n\t\t\t\t\t<Button onClick={handleDrawerClose}>\n\t\t\t\t\t\t<KeyboardArrowLeftIcon className={classes.close} />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\n\t\t\t\t<Divider />\n\n\t\t\t\t<LensAndNodeTableContainer setLens={setLens} curNode={curNode} />\n\t\t\t</Drawer>\n\n\t\t\t<main className={clsx(classes.content, { [classes.contentShift]: open })}>\n\t\t\t\t<div className={classes.drawerHeader} />\n\n\t\t\t\t{/* selected lens name */}\n\t\t\t\t<h3 className={classes.lensName}> {curLens || \"\"} </h3>\n\n\t\t\t\t<Typography paragraph></Typography>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\ntype EngagementUxState = {\n\tcurLens: string;\n\tcurNode: VizNode | null;\n\tloggedIn: boolean;\n\trenderedOnce: boolean;\n};\n\nexport const EngagementUx = () => {\n\tconst classes = useStyles();\n\n\tconst [engagementState, setEngagementState] = React.useState(\n\t\tdefaultEngagementState()\n\t);\n\n\tuseEffect(() => {\n\t\tif (engagementState.renderedOnce) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fetchLoginAndSetState = async () => {\n\t\t\tconst loggedIn = await checkLogin();\n\t\t\tif (!loggedIn) {\n\t\t\t\tconsole.warn(\"Logged out\");\n\t\t\t}\n\t\t\tsetEngagementState({\n\t\t\t\t...engagementState,\n\t\t\t\tloggedIn: loggedIn || false,\n\t\t\t\trenderedOnce: true,\n\t\t\t});\n\t\t}\n\n\t\t// Do the initial fetch, and schedule it to re-run every N seconds\n\t\tfetchLoginAndSetState();\n\t\tconst interval = setInterval(fetchLoginAndSetState, 1000);\n\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [engagementState, setEngagementState]);\n\n\tconst loggedIn = engagementState.loggedIn;\n\n\treturn (\n\t\t<>\n\t\t\t<EngagementView\n\t\t\t\tsetLens={(lens: string) =>\n\t\t\t\t\tsetEngagementState({\n\t\t\t\t\t\t...engagementState,\n\t\t\t\t\t\tcurLens: lens,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tcurLens={engagementState.curLens}\n\t\t\t\tcurNode={engagementState.curNode}\n\t\t\t/>\n\n\t\t\t<>\n\t\t\t\t<div className={classes.loggedIn}>\n\t\t\t\t\t{!loggedIn ? <LoginNotification /> : \"\"}\n\t\t\t\t</div>\n\n\t\t\t\t<GraphDisplay\n\t\t\t\t\tlensName={engagementState.curLens}\n\t\t\t\t\tsetCurNode={(node) => {\n\t\t\t\t\t\tsetEngagementState({\n\t\t\t\t\t\t\t...engagementState,\n\t\t\t\t\t\t\tcurNode: node,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</>\n\t\t</>\n\t);\n};\n","\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nexport const dasboardStyles = makeStyles( (theme: Theme) =>\n    createStyles({\n        root: {\n            display: \"flex\",\n        },\n        button: {\n            backgroundColor: \"#1A191C\",\n            margin: \"1rem\",\n            fontSize: \".65rem\",\n        }, \n        loggedIn: {\n            display:\"flex\", \n            justifyContent: \"flex-end\",\n            zIndex: 100, \n        }, \n        dashboard: {\n            display: \"flex\",\n            flexDirection: \"row\",\n        }, \n        link: {\n            fontSize: \".75rem\",\n            color: \"white\",\n            textDecoration: \"none\",\n            padding: \".75rem\",\n            backgroundColor: \"#1A191C\",\n            margin: \"1rem\",\n            textAlign: \"center\",\n            borderRadius: \".15rem\",\n            textTransform: \"uppercase\",\n        },\n        sagemaker: {\n            fontSize: \".65rem\",\n            color: \"white\",\n            textDecoration: \"none\",\n            padding: \".65rem\",\n            backgroundColor: \"#1A191C\",\n            margin: \"1rem\",\n            textAlign: \"center\",\n            borderRadius: \".15rem\",\n            textTransform: \"uppercase\",\n        },\n        navSec: {\n            margin: \"0 auto\",\n            marginTop: \"6rem\"\n        },\n        help: {\n            color:\"white\"\n        }\n    })\n);","import { apiFetchReq } from \"../fetch\";\r\nimport DEV_API_EDGES from \"../constants\";\r\n\r\nexport const getNotebookUrl = async (): Promise<string> => {\r\n    return apiFetchReq(`${DEV_API_EDGES.auth}/getNotebook`, \"post\")\r\n        .then(\r\n            (result) => result.success.notebook_url\r\n        );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useAsync } from \"react-async-hook\";\nimport { checkLogin } from \"services/login/checkLoginService\";\nimport { Link } from \"react-router-dom\";\nimport { dasboardStyles } from \"./styles\";\nimport GraplHeader from \"../reusableComponents/graplHeader/GraplHeader\";\nimport LoginNotification from \"../reusableComponents/notifications/Notifications\";\nimport { getNotebookUrl } from \"services/sagemakerNotebook/notebookService\";\n\nconst useStyles = dasboardStyles;\n\nexport default function Dashboard() {\n\tconst asyncSagemakerUrl = useAsync(getNotebookUrl, []);\n\tconst classes = useStyles();\n\n\tconst [state, setState] = useState({\n\t\tloggedIn: true,\n\t\trenderedOnce: false,\n\t});\n\n\tuseEffect(() => {\n\t\tif (state.renderedOnce) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst interval = setInterval(async () => {\n\t\t\tawait checkLogin().then((loggedIn) => {\n\t\t\t\tif (!loggedIn) {\n\t\t\t\t\tconsole.warn(\"Logged out\");\n\t\t\t\t}\n\t\t\t\tsetState({\n\t\t\t\t\tloggedIn: loggedIn || false,\n\t\t\t\t\trenderedOnce: true,\n\t\t\t\t});\n\t\t\t});\n\t\t}, 2000);\n\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, [state, setState]);\n\n\tconsole.log(\"state - loggedin\", state.loggedIn);\n\n\tconst loggedIn = state.loggedIn;\n\n\tconst openSagemakerUrl = () => {\n\t\tif (asyncSagemakerUrl.loading || !asyncSagemakerUrl.result) {\n\t\t\talert(\"sagemaker url not ready\");\n\t\t\treturn;\n\t\t}\n\n\t\twindow.open(asyncSagemakerUrl.result);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<GraplHeader displayBtn={false} />\n\n\t\t\t<div className={classes.dashboard}>\n\t\t\t\t<section className={classes.navSec}>\n\n\t\t\t\t\t\t<Link to=\"/engagements\" className={classes.link}>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tEngagements{\" \"}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/plugins\" className={classes.link}>\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tUpload Plugin{\" \"}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t<Button onClick={openSagemakerUrl} className={classes.sagemaker}>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tEngagement Notebook{\" \"}\n\t\t\t\t\t</Button>\n\t\t\t\t</section>\n\n\t\t\t\t<section>\n\t\t\t\t\t<div className={classes.loggedIn}>\n\t\t\t\t\t\t{!loggedIn ? <LoginNotification /> : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","import { PluginPayload } from \"../../types/uploadPluginTypes\";\nimport DEV_API_EDGES from \"../constants\";\nimport {apiPostRequestWithBody} from '../fetch';\n\nexport const uploadFilesToDgraph = async (payload: PluginPayload ): Promise<boolean> => {\n\n    const dgraphPayload = JSON.stringify(payload);\n\n    const dgraphFileUpload = await apiPostRequestWithBody(`${DEV_API_EDGES.modelPluginEdge}/deploy`, dgraphPayload);\n\n    const pluginFiles = await dgraphFileUpload;\n\n    return pluginFiles.success.Success;\n};","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(\n    (theme: Theme) =>\n        createStyles({\n            root: {\n                display: \"flex\",\n            },\n            formContainer: {\n                color: \"white\", \n                margin: \"1rem\",\n            },\n            btn: {\n                backgroundColor: \"#42C6FF\",\n                margin: \"0.25rem\",\n                padding: \"0.25rem\",\n                borderRadius: \"6px\",\n            },\n            loggedIn: {\n                display:\"flex\", \n                justifyContent: \"flex-end\",\n            }, \n            inputFiles: {\n                border: \"none\",\n                width: \"35vw\",\n            },\n            upload: {\n                display: \"flex\",\n            },\n            succMsg: {\n                color: \"#03dac6\",\n            }, \n            errMsg: {\n                color: \"#CF6679\",\n            }, \n            pluginTable: {\n                backgroundColor: \"#292929\",\n                margin: \"1em\",\n                width: \"50%\",\n                height: \"100%\",\n                boxShadow: \" 1.5px 1.5px #000000\",\n            }, \n            uploadFormContainer: {\n                backgroundColor: \"#292929\",\n                margin: \"1em\", \n                width: \"50%\",\n                height: \"100%\",\n                boxShadow: \"1.5px 1.5px #000000\",\n                display: \"flex\", \n            }, \n            uploadForm: {\n                fontFamily: \"Arial\",\n                display: \"flex\",\n                fontSize: \".75rem\",\n            }\n        }\n    )\n);","import React, { SyntheticEvent } from 'react';\nimport { Field, Form, Formik } from \"formik\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport { Event, UploadFormState, DirectoryUpload, MessageProps} from \"../../../types/uploadPluginTypes\"\nimport { uploadFilesToDgraph } from \"../../../services/uploadPlugin/uploadFilesToDgraph\";\nimport { useStyles } from \"../uploadPluginStyles\";\n\nconst readFile = async (file: Blob): Promise <string> => {\n    return await new Promise(\n        (resolve, reject) => {\n            const reader = new FileReader();\n            reader.addEventListener('load', (event: ProgressEvent<FileReader>) => {\n                if (event.target === null) {\n                    console.warn(\"onload event was null\");\n                    return;\n                } else {\n                    const fileRes = event.target.result;\n                    if (fileRes === null) {\n                        console.warn(\"Read pluginfile was null\");\n                        reject(null)\n                        return;\n                    } else {\n                        if (typeof(fileRes) === 'string') {\n                            resolve(fileRes);\n                        } else {\n                            resolve(new TextDecoder().decode(fileRes));\n                        }\n                    }\n                }\n            });\n            return reader.readAsText(file);\n        }\n    )\n}\n\nconst defaultUploadFormState = (): UploadFormState => {\n    return {curFiles: null, success: null}\n}\n\nconst Message = ({status}: MessageProps) => {\n    const classes = useStyles();\n    if (status === true) {\n        return(\n            <div className = {classes.succMsg}>Plugins Successfully Deployed!</div>\n        )\n    } else if (status === false){\n        return(\n            <div className = {classes.errMsg}>Upload Unsuccessful</div>\n        )\n    } else {\n        return (<div />)\n    }\n    \n}\n\nexport const UploadForm = () => {\n    const [state, setState] = React.useState(defaultUploadFormState());\n    const classes = useStyles();\n\n    return(\n        <div className = {classes.formContainer}>\n            <h4>UPLOAD DIRECTORY WITH PLUGINS:</h4>\n            <Formik\n                initialValues={{ \"filename\": \"\" }}\n                onSubmit={\n                    (event: Event) => { \n                        const fileMap = {} as any;\n                        const reads: Promise<void>[] = [];\n                        const {curFiles} = state;\n\n                        if (curFiles === null) {\n                            console.warn(\"Attempted to upload files without selecting any\");\n                            return\n                        }\n                        \n                        for(const f of curFiles){\n                            let fileRead = readFile(f).then((fileResult) => {\n                                // This any is because webkitRelativePath is not standard, and therefor\n                                // is not part of the File type\n                                const path = ((f as any).webkitRelativePath || (f as any).mozRelativePath);\n\n                                fileMap[path] = fileResult;\n                            });\n                            reads.push(fileRead);\n                        }\n                        let success = true;\n                        Promise.all(reads).then(() => {\n                            return uploadFilesToDgraph({plugins: fileMap});\n                        })\n                        .then((didSucceed) => {success = success && didSucceed;})\n                        .then(() => setState({...state, success}))\n                    }\n                }\n            >\n                <Form className = {classes.uploadForm}>\n                    {/* accept = property to restrict types, currently we accept ANY type */}\n                    <Field \n                        className = {classes.inputFiles}\n                        name=\"plugin\" \n                        directory=\"\" \n                        webkitdirectory=\"\"\n                        mozdirectory=\"\"\n                        type=\"file\" \n                        multiple placeholder=\"Plugin\" \n                        onChange={\n                            (event: SyntheticEvent<DirectoryUpload>) => {\n                                setState({\n                                    ...state,\n                                    curFiles: event.currentTarget.files\n                                })\n                            }\n                        }\n                    /> \n                    <Button className=\"submitBtn\"  type=\"submit\"><CloudUploadIcon className = {classes.btn}/></Button>\n                </Form>\n            </Formik>\n            <br />\n            <Message status = {state.success}/>\n        </div>\n    )\n}","import DEV_API_EDGES from \"../constants\";\nimport { apiFetchReq } from \"../fetch\";\n\nexport const getPluginList = async () => {\n\ttry {\n\t\tconst getPluginListReq = await apiFetchReq(\n\t\t\t`${DEV_API_EDGES.modelPluginEdge}/listModelPlugins`,\n\t\t\t\"POST\"\n\t\t);\n\t\tconsole.log(\"getPluginList\", getPluginListReq);\n\t\tlet pluginList: string[] = getPluginListReq.success.plugin_list;\n\n\t\treturn pluginList;\n\t} catch (e) {   \n\t\tconsole.warn(\"Error retrieving pluginList\", e);\n\t\treturn [];\n\t}\n};\n","import DEV_API_EDGES from '../constants';\nimport {apiPostRequestWithBody} from '../fetch';\n\nexport const deletePlugin = async ( pluginName: string ): Promise <boolean> => {\n    const body = JSON.stringify( {plugins_to_delete: [pluginName]} );\n    \n    try{ \n        const response = await apiPostRequestWithBody(`${DEV_API_EDGES.modelPluginEdge}/deleteModelPlugin`, body);\n    \n        await response.success;\n        return true; \n    } catch (e){\n        console.warn(\"Error deleting plugin\", e);\n        return false; \n    }\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport { PluginTableState } from \"../../../types/uploadPluginTypes\";\n\nimport { getPluginList } from \"../../../services/uploadPlugin/getPluginList\";\nimport { deletePlugin } from \"../../../services/uploadPlugin/deletePlugin\";\nimport { useStyles } from \"../uploadPluginStyles\";\n\nconst defaultPluginTableState = (): PluginTableState => {\n\treturn {\n\t\trows: [],\n\t\ttoggle: true,\n\t};\n};\n\nexport const PluginTable = () => {\n\tconst classes = useStyles();\n\tconst [state, setState] = React.useState(defaultPluginTableState());\n\tconst [page, setPage] = useState(0);\n\tconst [rowsPerPage, setRowsPerPage] = useState(10);\n\n\tconst handleChangePage = (\n\t\tevent: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\n\t\tnewPage: number\n\t) => {\n\t\tsetPage(newPage);\n\t};\n\tconst handleChangeRowsPerPage = (\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n\t) => {\n\t\tsetRowsPerPage(parseInt(event.target.value, 10));\n\t\tsetPage(0);\n\t};\n\n\tconst emptyRows =\n\t\trowsPerPage - Math.min(rowsPerPage, state.rows.length - page * rowsPerPage);\n\n\tuseEffect(() => {\n\t\ttry {\n\t\t\tconst interval = setInterval(async () => {\n\t\t\t\tawait getPluginList().then((rows) => {\n\t\t\t\t\tsetState({\n\t\t\t\t\t\ttoggle: state.toggle,\n\t\t\t\t\t\trows,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t\treturn () => clearInterval(interval);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Unable to retrieve plugin list\", e);\n\t\t}\n\t}, [state.toggle]);\n\n\treturn (\n\t\t<>\n\t\t\t<TableContainer>\n\t\t\t\t<Table>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow key={\"plugin\"}>\n\t\t\t\t\t\t\t<TableCell align=\"left\">PLUGINS</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody aria-label=\"PluginTable\">\n\t\t\t\t\t\t{state.rows\n\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\t\t\t\t\t\t\t.map((pluginName: string) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow key={pluginName}>\n\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">\n\t\t\t\t\t\t\t\t\t\t\t{pluginName}\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeletePlugin(pluginName).then(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoggle: state.toggle && false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Plugin Deleted\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlinedIcon className={classes.btn} />\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t{emptyRows > 0 && (\n\t\t\t\t\t\t\t<TableRow style={{ height: 53 * emptyRows }}>\n\t\t\t\t\t\t\t\t<TableCell colSpan={6} />\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\n\t\t\t\t<TablePagination\n\t\t\t\t\taria-label=\"pagination\"\n\t\t\t\t\trowsPerPageOptions={[5, 10, 25]}\n\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\tcount={state.rows.length}\n\t\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\t\tpage={page}\n\t\t\t\t\tonChangePage={handleChangePage}\n\t\t\t\t\tonChangeRowsPerPage={handleChangeRowsPerPage}\n\t\t\t\t/>\n\t\t\t</TableContainer>\n\t\t</>\n\t);\n};\n","import React, { useEffect, useState } from \"react\";\nimport { GraplHeader } from \"../reusableComponents\";\n\nimport { UploadForm } from \"./utils/uploadPlugins\";\nimport { PluginTable } from \"./utils/pluginTable\";\nimport { checkLogin } from \"../../services/login/checkLoginService\";\nimport { LoginNotification } from \"../reusableComponents\";\n\nimport { useStyles } from \"./uploadPluginStyles\";\n\nconst UploadPlugin = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    loggedIn: true,\n    renderedOnce: false,\n  });\n\n  useEffect(() => {\n    if (state.renderedOnce) {\n      return;\n    }\n    const interval = setInterval(async () => {\n      await checkLogin().then((loggedIn) => {\n        if (!loggedIn) {\n          console.warn(\"Logged Out\");\n        }\n        setState({\n          loggedIn: loggedIn || false,\n          renderedOnce: true,\n        });\n      });\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [state, setState]);\n\n  const loggedIn = state.loggedIn;\n\n  return (\n    <>\n      <GraplHeader displayBtn={true} />\n\n      <div className={classes.loggedIn}>\n        {!loggedIn ? <LoginNotification /> : \"\"}\n      </div>\n\n      <div className={classes.upload}>\n        <div className={classes.uploadFormContainer}>\n          <UploadForm />\n          <div id=\"message\" />\n        </div>\n        <div className={classes.pluginTable}>\n          <PluginTable />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadPlugin;\n","import Routes from \"./routes\";\n\nexport default Routes;\n","import React from \"react\";\nimport \"../components/login/LogIn.css\";\nimport { LogIn } from \"../components/login/Login\";\nimport { EngagementUx } from \"../components/engagementView/EngagementView\";\nimport Dashboard from \"../components/dashboard/Dashboard\";\nimport UploadPlugin from \"../components/uploadPlugin/UploadPluginView\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nexport default function Routes() {\n    console.log(\"Grapl loaded\");\n\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/login\" component={LogIn} />\n                <Route exact path=\"/\" component={Dashboard} />\n                <Route exact path=\"/plugins\" component={UploadPlugin} />\n                <Route exact path=\"/engagements\" component={EngagementUx} />\n            </Switch>\n        </HashRouter>\n    );\n}\n","import React from \"react\";\nimport Routes from \"./routes\";\n\n\nexport default function App() {\n  console.log(\"Welcome to Grapl\");\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' }\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#373740',\n        }\n    }\n})\n\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <ThemeProvider theme={darkTheme}>\n                <App />, \n            </ThemeProvider>\n        </HashRouter>\n    </React.StrictMode>,\n    rootElement\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}