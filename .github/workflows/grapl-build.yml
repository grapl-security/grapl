name: Grapl Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - staging
      - master

jobs:
  cargo-audit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cargo Audit
        run: |
          docker build -f .github/etc/cargo-audit/Dockerfile -t grapl/grapl-cargo-audit:latest src/rust
          docker run -t grapl/grapl-cargo-audit:latest cargo audit

  check-pypi:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:

      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pypi-simple
        run: |
          python3 -mvenv venv && . venv/bin/activate
          pip install pypi-simple
          deactivate

      - name: Check whether grapl_graph_descriptions version has been bumped
        run: |
          . venv/bin/activate
          if [[ "$CHANNEL" == "latest" ]]; then
              python etc/build_scripts/check_pypi_version.py \
                grapl_graph_descriptions \
                $(cat src/rust/graph-descriptions/VERSION)
          else
              python etc/build_scripts/check_pypi_version.py \
                grapl_graph_descriptions \
                $(cat src/rust/graph-descriptions/VERSION) \
                true
          fi
          deactivate

      - name: Check whether grapl_analyzerlib version has been bumped
        run: |
          . venv/bin/activate
          if [[ "$CHANNEL" == "latest" ]]; then
              python etc/build_scripts/check_pypi_version.py \
                grapl_analyzerlib \
                $(cat src/python/grapl_analyzerlib/VERSION)
          else
              python etc/build_scripts/check_pypi_version.py \
                grapl_analyzerlib \
                $(cat src/python/grapl_analyzerlib/VERSION) \
                true
          fi
          deactivate

  rust-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dobi
        run: |
          wget https://github.com/dnephin/dobi/releases/download/v0.13.0/dobi-linux
          chmod +x dobi-linux

      - name: Build Rust services
        run: |
          GRAPL_RELEASE_TARGET=debug TAG=latest ./dobi-linux --no-bind-mount rust

      - name: Rust unit tests
        run: |
          GRAPL_RELEASE_TARGET=debug TAG=latest ./dobi-linux --no-bind-mount rust-unit-tests

  python-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dobi
        run: |
          wget https://github.com/dnephin/dobi/releases/download/v0.13.0/dobi-linux
          chmod +x dobi-linux

      - name: Build Python services
        run: |
          GRAPL_RELEASE_TARGET=debug TAG=latest ./dobi-linux --no-bind-mount python

      - name: Python unit tests
        run: |
          GRAPL_RELEASE_TARGET=debug TAG=latest ./dobi-linux --no-bind-mount python-unit-tests

  js-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dobi
        run: |
          wget https://github.com/dnephin/dobi/releases/download/v0.13.0/dobi-linux
          chmod +x dobi-linux

      - name: Build JS services
        run: |
          GRAPL_RELEASE_TARGET=debug TAG=latest ./dobi-linux --no-bind-mount js

      - name: JS unit tests
        run: |
          GRAPL_RELEASE_TARGET=debug TAG=latest ./dobi-linux --no-bind-mount js-unit-tests

  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dobi
        run: |
          wget https://github.com/dnephin/dobi/releases/download/v0.13.0/dobi-linux
          chmod +x dobi-linux

      - name: Build Grapl
        run: |
          GRAPL_RELEASE_TARGET=debug TAG=latest ./dobi-linux --no-bind-mount build

      - name: Run integration tests
        run: |
          GRAPL_RELEASE_TARGET=debug TAG=latest ./dobi-linux --no-bind-mount integration-tests
