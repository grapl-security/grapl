name: Grapl Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - rc-*

jobs:
  rust-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: Rust unit tests
        run: |
          make test-unit-rust

  python-unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pants Cache
        uses: actions/cache@v2
        with:
          # We'll set up a new cache when our lock-file changes
          key: pants-${{ matrix.python-version }}-${{ hashFiles('3rdparty/python/constraints.txt') }}
          path: |
            ~/.cache/pants/setup
            ~/.cache/pants/named_caches
            ~/.cache/pants/lmdb_store

      - name: Python unit tests
        run: ./build-support/retry.sh --sleep=0 --tries=3 -- make test-unit-python

  python-typecheck-pants:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pants Cache
        uses: actions/cache@v2
        with:
          # We'll set up a new cache when our lock-file changes
          key: pants-${{ matrix.python-version }}-${{ hashFiles('3rdparty/python/constraints.txt') }}
          path: |
            ~/.cache/pants/setup
            ~/.cache/pants/named_caches
            ~/.cache/pants/lmdb_store
      - name: Typecheck Python code with Pants
        run: ./build-support/retry.sh --sleep=0 --tries=3 -- make test-typecheck-pants

  python-typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: Run python-typecheck
        run: |
          make test-typecheck

  js-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: JS unit tests
        run: |
          make test-unit-js

  build-zips:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build AWS Lambda ZIP files
        run: make zip

  integration-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run integration tests
        run: |
          echo "unset RUSTC_WRAPPER" > rust_env.sh
          GRAPL_RUST_ENV_FILE=rust_env.sh GRAPL_LOG_LEVEL=DEBUG \
            ./build-support/retry.sh --sleep=0 --tries=2 -- \
            make test-integration

      - name: 'Upload integration test artifacts'
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: integration-test-artifacts
          path: "test_artifacts"
          retention-days: 28


  # In the future, this should probably be merged back into the integration tests, but
  # since it's so timing-dependent I'm going to treat it separately until it stabilizes a bit.
  FLAKY-end-to-end-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run end-to-end tests
        run: |
          # A cheap, low-tech retry. If any of them ever exits 0, it short circuits.
          GRAPL_LOG_LEVEL=DEBUG DUMP_ARTIFACTS=True make test-e2e ||
          GRAPL_LOG_LEVEL=DEBUG DUMP_ARTIFACTS=True make test-e2e ||
          GRAPL_LOG_LEVEL=DEBUG DUMP_ARTIFACTS=True make test-e2e

      - name: 'Upload e2e test artifacts'
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: e2e-artifacts
          path: "test_artifacts"
          retention-days: 28
