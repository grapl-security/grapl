name: Grapl Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - staging
      - master

jobs:
  cargo-audit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cargo Audit
        run: |
          docker build -f .github/etc/cargo-audit/Dockerfile -t grapl/grapl-cargo-audit:latest src/rust
          docker run -t grapl/grapl-cargo-audit:latest cargo audit

  rust-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: Rust unit tests
        run: |
          make test-unit-rust

  python-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: Python unit tests
        run: |
          make test-unit-python


  python-typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: Run python-typecheck
        run: |
          make test-typecheck

  js-unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: JS unit tests
        run: |
          make test-unit-js

  integration-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run integration tests
        run: |
          echo "unset RUSTC_WRAPPER" > rust_env.sh
          GRAPL_RUST_ENV_FILE=rust_env.sh GRAPL_LOG_LEVEL=DEBUG make test-integration
      
      # NOTE: This requires >= py37
      # Unlike the e2e tests, we don't dump the database contents; strictly logs.
      - name: 'Collect integration test artifacts'
        if: ${{ always() }}
        run: |
          python3 ./etc/ci_scripts/dump_artifacts.py --compose-project "grapl-integration_tests"
           
      - name: 'Upload integration test artifacts'
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: integration-test-artifacts
          # this path is specified in dump_artifacts.py
          path: /tmp/dumped_artifacts/
          retention-days: 28


  # In the future, this should probably be merged back into the integration tests, but
  # since it's so timing-dependent I'm going to treat it separately until it stabilizes a bit.
  FLAKY-end-to-end-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2

      - name: Prepare Github Actions CI
        run: |
          ./etc/ci_scripts/clean_gh_actions_space.sh
          ./etc/ci_scripts/install_requirements.sh

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run end-to-end tests
        run: |
          GRAPL_LOG_LEVEL=DEBUG \
          DUMP_ARTIFACTS=True \
          make test-e2e

      # NOTE: This requires >= py37
      - name: 'Collect e2e test artifacts'
        if: ${{ always() }}
        run: |
          python3 ./etc/ci_scripts/dump_artifacts.py --compose-project "grapl-e2e_tests"
           
      - name: 'Upload e2e test artifacts'
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: e2e-artifacts
          # this path is specified in dump_artifacts.py
          path: /tmp/dumped_artifacts/
          retention-days: 28
