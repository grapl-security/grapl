name: Grapl Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: $GITHUB_REF

      - name: Configure environmment
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "$GITHUB_REF" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          [ "$VERSION" == "master" ] && VERSION=latest
          [ "$VERSION" == "staging" ] && VERSION=beta

          echo '::set-env name=VERSION::$VERSION'

      - name: Get upload URL for release corresponding to this release event
        run: |
          URL = "$(curl --request GET \
          --url https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | \
          python -c "import json; import sys; print(json.load(sys.stdin)['upload_url']);")" \
          echo '::set-env name=UPLOAD_URL::$URL'

      - name: Build Grapl
        run: |
          TAG=$VERSION docker-compose -f docker-compose.yml -f docker-compose.build.yml build --build-args release_target=release
          docker system prune -f

      - name: Log in to Docker registry
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username grapl --password-stdin

      - name: Publish Grapl images to DockerHub
        run: |
          docker push grapl/grapl-sysmon-subgraph-generator:$VERSION
          docker push grapl/grapl-node-identifier:$VERSION
          docker push grapl/grapl-node-identifier-retry-handler:$VERSION
          docker push grapl/grapl-graph-merger:$VERSION
          docker push grapl/grapl-analyzer-dispatcher:$VERSION
          docker push grapl/grapl-analyzer-executor:$VERSION
          docker push grapl/grapl-engagement-creator:$VERSION
          docker push grapl/grapl-engagement-edge:$VERSION
          docker push grapl/grapl-model-plugin-deployer:$VERSION
          docker push grapl/grapl-engagement-view:$VERSION
          docker push grapl/grapl-graph-provision:$VERSION
          docker push grapl/grapl-dynamodb-provision:$VERSION

      - name: Extract Grapl artifacts from build
        run: |
          docker create -ti --name cp-sysmon-subgraph-generator grapl/grapl-sysmon-subgraph-generator:$VERSION bash
          docker cp-sysmon-subgraph-generator:/target/release/sysmon-subgraph-generator .
          docker rm -f cp-sysmon-subgraph-generator
          zip -9 ./sysmon-subgraph-generator ./sysmon-subgraph-generator.zip
          rm ./sysmon-subgraph-generator

          docker create -ti --name cp-generic-subgraph-generator grapl/grapl-generic-subgraph-generator:$VERSION bash
          docker cp cp-generic-subgraph-generator:/target/release/generic-subgraph-generator .
          docker rm -f cp-generic-subgraph-generator
          zip -9 ./generic-subgraph-generator ./generic-subgraph-generator.zip
          rm ./generic-subgraph-generator

          docker create -ti --name cp-node-identifier grapl/grapl-node-identifier:$VERSION bash
          docker cp cp-node-identifier:/target/release/node-identifier .
          docker rm -f cp-node-identifier
          zip -9 ./node-identifier ./node-identifier.zip
          rm ./node-identifier

          docker create -ti --name cp-node-identifier-retry-handler grapl/grapl-node-identifier-retry-handler:$VERSION bash
          docker cp cp-node-identifier-retry-handler:/target/release/node-identifier-retry-handler .
          docker rm -f cp-node-identifier-retry-handler
          zip -9 ./node-identifier-retry-handler ./node-identifier-retry-handler.zip
          rm ./node-identifier-retry-handler

          docker create -ti --name cp-graph-merger grapl/grapl-graph-merger:$VERSION bash
          docker cp cp-graph-merger:/target/release/graph-merger .
          docker rm -f cp-graph-merger
          zip -9 ./graph-merger ./graph-merger.zip
          rm ./graph-merger

          docker create -ti --name cp-analyzer-dispatcher grapl/grapl-analyzer-dispatcher:$VERSION bash
          docker cp cp-analyzer-dispatcher:/target/release/analyzer-dispatcher .
          docker rm -f cp-analyzer-dispatcher
          zip -9 ./analyzer-dispatcher ./analyzer-dispatcher.zip
          rm ./analyzer-dispatcher

          docker create -ti --name cp-analyzer-executor grapl/grapl-analyzer-executor:$VERSION bash
          docker cp cp-analyzer-executor:/lambda.zip analyzer-executor.zip
          docker rm -f cp-analyzer-executor

          docker create -ti --name cp-engagement-creator grapl/grapl-engagement-creator:$VERSION bash
          docker cp cp-engagement-creator:/lambda.zip engagement-creator.zip
          docker rm -f cp-engagement-creator

          docker create -ti --name cp-engagement-edge grapl/grapl-engagement-edge:$VERSION bash
          docker cp cp-engagement-edge:/lambda.zip engagement-edge.zip
          docker rm -f cp-engagement-edge

          docker create -ti --name cp-model-plugin-deployer grapl/grapl-model-plugin-deployer:$VERSION bash
          docker cp cp-model-plugin-deployer:/lambda.zip model-plugin-deployer.zip
          docker rm -f cp-model-plugin-deployer

      - name: Upload sysmon-subgraph-generator to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./sysmon-subgraph-generator.zip
          asset_name: sysmon-subgraph-generator.zip
          asset_content_type: application/zip

      - name: Upload generic-subgraph-generator to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./generic-subgraph-generator.zip
          asset_name: generic-subgraph-generator.zip
          asset_content_type: application/zip

      - name: Upload node-identifier to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./node-identifier.zip
          asset_name: node-identifier.zip
          asset_content_type: application/zip

      - name: Upload node-identifier-retry-handler to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./node-identifier-retry-handler.zip
          asset_name: node-identifier-retry-handler.zip
          asset_content_type: application/zip

      - name: Upload graph-merger to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./graph-merger.zip
          asset_name: graph-merger.zip
          asset_content_type: application/zip

      - name: Upload analyzer-dispatcher to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./analyzer-dispatcher.zip
          asset_name: analyzer-dispatcher.zip
          asset_content_type: application/zip

      - name: Upload analyzer-executor to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./analyzer-executor.zip
          asset_name: analyzer-executor.zip
          asset_content_type: application/zip

      - name: Upload engagement-creator to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./engagement-creator.zip
          asset_name: engagement-creator.zip
          asset_content_type: application/zip

      - name: Upload engagement-edge to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./engagement-edge.zip
          asset_name: engagement-edge.zip
          asset_content_type: application/zip

      - name: Upload model-plugin-deployer to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: $UPLOAD_URL
          asset_path: ./model-plugin-deployer.zip
          asset_name: model-plugin-deployer.zip
          asset_content_type: application/zip
