name: Grapl Lint

env:
  PANTS_CONFIG_FILES: "['pants.toml', 'pants.ci.toml']"

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  proto-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint Protobuf Definitions
        run: |
          etc/install_buf.sh
          ./buf lint

  proto-breaking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check Protobufs for Backwards-Incompatible Changes
        # We use the full URL instead of just ".git" here because we
        # just shallow-clone in Github Actions, so we aren't going to
        # have the staging branch locally.
        run: |
          etc/install_buf.sh
          ./buf breaking --against="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git#branch=main"

  rust-format:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/rust
    steps:
      - uses: actions/checkout@v2
      - name: Check Rust code formatting
        # Github Workflow runners appear to already have rustup, but
        # using a minimal profile, which runs afoul of the
        # RUSTUP_TOOLCHAIN variable in bin/format, because `rustfmt`
        # isn't included in the minimal profile :(
        run: |
          rustup set profile default
          bin/format --check

  rust-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/rust
    steps:
      - uses: actions/checkout@v2
      - name: Lint Rust Code
        run: bin/lint

  python-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pants Cache
        uses: actions/cache@v2
        with:
          # We'll set up a new cache when our lock-file changes
          key: pants-${{ matrix.python-version }}-${{ hashFiles('3rdparty/python/constraints.txt') }}
          path: |
            ~/.cache/pants/setup
            ~/.cache/pants/named_caches
            ~/.cache/pants/lmdb_store
      - name: Lint
        run: make lint-python

  check-pypi:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pypi-simple
        run: |
          python3 -mvenv venv && . venv/bin/activate
          pip install pypi-simple
          deactivate

      - name: Export CHECK_PYPI_VERSION_ARGS as "check against test.pypi"
        # passing 'true' to check_pypi means "check test.pypi.org" vs prod
        run: |
          echo "CHECK_PYPI_VERSION_ARGS=true" >> $GITHUB_ENV

      # TODO: Reactivate this once the new graplinc-grapl-api package
      # has been pushed to test PyPi
      #
      # - name: Check whether graplinc-grapl-api version has been bumped
      #   run: |
      #     . venv/bin/activate
      #     python etc/build_scripts/check_pypi_version.py \
      #       graplinc-grapl-api \
      #       $(cat src/python/graplinc-grapl-api/VERSION) \
      #       $CHECK_PYPI_VERSION_ARGS
      #     deactivate

      - name: Check whether grapl_analyzerlib version has been bumped
        run: |
          . venv/bin/activate
          python etc/build_scripts/check_pypi_version.py \
            grapl_analyzerlib \
            $(cat src/python/grapl_analyzerlib/VERSION) \
            $CHECK_PYPI_VERSION_ARGS
          deactivate

      - name: Check whether grapl-common version has been bumped
        run: |
          . venv/bin/activate
          python etc/build_scripts/check_pypi_version.py \
            grapl-common \
            $(cat src/python/grapl-common/VERSION) \
            $CHECK_PYPI_VERSION_ARGS
          deactivate

      - name: Check whether grapl-tests-common version has been bumped
        run: |
          . venv/bin/activate
          python etc/build_scripts/check_pypi_version.py \
            grapl-tests-common \
            $(cat src/python/grapl-tests-common/VERSION) \
            $CHECK_PYPI_VERSION_ARGS
          deactivate
