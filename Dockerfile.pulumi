FROM python:3.8-slim-bullseye as grapl-local-pulumi

RUN apt-get update \
    && apt-get install --yes --no-install-recommends \
       build-essential=12.9 \
       curl=7.74.0-1.3+deb11u1 \
       unzip=6.0-26 \
    && rm -rf /var/lib/apt/lists/* \
    && adduser \
        --disabled-password \
        --gecos '' \
        --home /home/grapl \
        --shell /bin/bash \
        grapl

USER grapl
ENV USER=grapl
WORKDIR /home/grapl

RUN curl -O https://get.pulumi.com/releases/sdk/pulumi-v3.33.1-linux-x64.tar.gz && \
    tar -xzvf pulumi-*.tar.gz && \
    mv pulumi pulumi-bin
ENV PATH=/home/grapl/pulumi-bin:${PATH}

COPY --chown=grapl 3rdparty/python/constraints.txt constraints.txt

# Automatically ensures that our virtualenv is created and active on
# all subsequent actions
#
# DL3059 info: Multiple consecutive `RUN` instructions. Consider consolidation.
# Going to ignore this becuase the two RUNS seem somewhere different and it's
# a minor info severity.
#
# hadolint ignore=DL3059
RUN mkdir venv
ENV VIRTUAL_ENV=/home/grapl/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

RUN pip install --no-cache-dir --requirement constraints.txt

COPY --chown=grapl pulumi pulumi

# Create a directory *as the grapl user*, at which we will mount an
# external volume to share Pulumi run outputs with other
# containers. Because of Docker magic, this has to be present first,
# and with the correct permissions, in order for us to be able to
# write to it.
RUN mkdir /home/grapl/pulumi-outputs

# Make nomad files available to Pulumi
COPY --chown=grapl nomad nomad
WORKDIR /home/grapl/pulumi
