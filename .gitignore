# Mac OS
.DS_Store

# No swap files pls
*.swp

# Test outputs
test/integration-outputs
# Artifacts dumped from `make dump-artifacts-local` script
/test_artifacts/

# Environments
.env
venv/

# Python misc
__pycache__/
*.py[cod]
*$py.class
.mypy_cache
.hypothesis
.pytype/

# Rust outputs
target/

# Node packages
# This exists to keep the existence of the node_modules directory in git.
node_modules/
# corepack installs the node version in .node. Kinda annoying but makes sense since its not yarn-specific
.node/

# Nomad artifacts
# This is a generated config file for local grapl
nomad/local/mount-grapl-root-as-volume.nomad

# Distribution / packaging
*.zip
/dist/

# IDE files
*.code-workspace
*.vscode
.idea/
*.iml
/tags
/tags.lock
/tags.temp
.log
pyrightconfig.json

# Pants-related artifacts
# https://www.pantsbuild.org/docs/gitignore
########################################################################
/.pants.d/
/.pids
/.pants.workdir.file_lock*

# See build-support/manage_virtualenv.sh
/build-support/grapl-venv

# Generated when profiling rust code
*.profdata
*.profraw

# Devbox pulumi stacks
devbox/provision/Pulumi.*.yaml

### PERSONAL SCRIPTS
upload_localhost.sh
