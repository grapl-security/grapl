# -*- mode: sh -*-
# Environment file used by our Docker Compose local environment /
# integration / end-to-end testing setup.

# Ports
########################################################################

# Dgraph default ports
# https://dgraph.io/docs/deploy/ports-usage/
DGRAPH_ALPHA_GRPC_EXTERNAL_PUBLIC_PORT=9080
DGRAPH_ALPHA_HTTP_EXTERNAL_PUBLIC_PORT=8080

# Localstack's edge port; all Localstack services are proxied through
# this port.
#
# NOTE: If you change this value, please edit the scripts in
# etc/local_grapl/bin/ as well. This is only until we can deal with
# those scripts in a better, more formalized way.
LOCALSTACK_PORT=4566 # default value

VSC_DEBUGGER_PORT_FOR_GRAPL_E2E_TESTS=8400
VSC_DEBUGGER_PORT_FOR_GRAPHQL_ENDPOINT_TESTS=8403
# 8404, 8405 are used for svcloud, svbackup in some distros
VSC_DEBUGGER_PORT_FOR_GRAPHQL_ENDPOINT=8406

# Zookeeper port
ZOOKEEPER_PORT=2181

# Kafka broker ports
KAFKA_BROKER_PORT=19092  # For use by Nomad tasks outside the `kafka` task group.
KAFKA_BROKER_PORT_FOR_HOST_OS=29092  # For use by Pulumi running on the host OS
KAFKA_JMX_PORT=9101

# POSTGRES DB PORTS
PLUGIN_REGISTRY_DB_PORT=5432
PLUGIN_WORK_QUEUE_DB_PORT=5532

# Hosts
#
# We use Docker network aliases to set these up, and then ultimately
# pass them into our services.
########################################################################
AWS_REGION=us-east-1

LOCALSTACK_HOST=aws.grapl.test
DGRAPH_HOST=dgraph.grapl.test
GRAPL_API_HOST=api.grapl.test

# Endpoints
#
# NOTE: Endpoints have a protocol and port. Additionally, they are
# only for usage within the Docker Compose network.
########################################################################
LOCALSTACK_ENDPOINT=http://${LOCALSTACK_HOST}:${LOCALSTACK_PORT}
# Just an alias for our unified Localstack endpoint
GRAPL_AWS_ENDPOINT=${LOCALSTACK_ENDPOINT}

# Credentials
########################################################################
# NOTE: These are the default values assumed by Localstack
#
# NOTE: If you change these values, please edit the scripts in
# etc/local_grapl/bin/ as well. This is only until we can deal with
# those scripts in a better, more formalized way.
FAKE_AWS_ACCESS_KEY_ID="test"
FAKE_AWS_SECRET_ACCESS_KEY="test"

GRAPL_AWS_ACCESS_KEY_ID="${FAKE_AWS_ACCESS_KEY_ID}"
GRAPL_AWS_ACCESS_KEY_SECRET="${FAKE_AWS_SECRET_ACCESS_KEY}"  # Note the slight incongruity on this line

# Logging
########################################################################
GRAPL_LOG_LEVEL=DEBUG
# Python buffers output by default, which means it can swallow
# information that we might like to actually see in our container
# logs. This turns that buffering off.
PYTHONUNBUFFERED=1
RUST_BACKTRACE=1
RUST_LOG=DEBUG

# Miscellaneous
########################################################################
MG_ALPHAS=${DGRAPH_HOST}:${DGRAPH_ALPHA_GRPC_EXTERNAL_PUBLIC_PORT}