---
env:
  PANTS_CONFIG_FILES: "['pants.toml', 'pants.ci.toml']"
  BUILDKITE_PLUGIN_VAULT_ENV_SECRET_PREFIX: "secret/data/buildkite/env"

steps:
  - label: ":docker: Build Docker Containers"
    command:
      # Note: all these containers are uploaded to the `raw`
      # repository. If they all get built successfully, then we'll
      # promote them as a group later.
      - ".buildkite/scripts/build_and_upload_containers.sh"
    key: "docker-containers"
    plugins:
      - grapl-security/vault-login#v0.1.0
      - grapl-security/vault-env#v0.1.0:
          secrets:
            - CLOUDSMITH_API_KEY
      - docker-login#v2.0.1:
          username: grapl-cicd
          password-env: CLOUDSMITH_API_KEY
          server: docker.cloudsmith.io
    agents:
      queue: "docker"
    artifact_paths:
      - "*.grapl-artifacts.json"

  - wait

  # Downloads and operates on all the *.grapl-artifacts.json files
  # that were uploaded in any previous steps of this pipeline.
  - label: "Merge artifacts files"
    command:
      - .buildkite/scripts/merge_artifact_files.sh

  - wait

  # Promote all the artifacts
  #
  # We do this before the RC creation because that
  # triggers a run of the provision pipeline, and we want to make sure
  # all the artifacts are in place first.
  - label: ":cloudsmith: Promote artifacts"
    plugins:
      - grapl-security/vault-login#v0.1.0
      - grapl-security/vault-env#v0.1.0:
          secrets:
            - CLOUDSMITH_API_KEY
      - artifacts#v1.4.0:
          # NOTE: this assumes that all artifacts mentioned in this
          # file are stored in Cloudsmith!
          download: all_artifacts.json
      - grapl-security/cloudsmith#v0.1.3:
          promote:
            org: grapl
            action: move
            from: raw
            to: testing
            packages_file: all_artifacts.json
    agents:
      queue: "docker"

  - wait

  - label: ":medal: Create new release candidate"
    plugins:
      - grapl-security/vault-login#v0.1.0
      - grapl-security/vault-env#v0.1.0:
          secrets:
            - PULUMI_ACCESS_TOKEN
      - grapl-security/grapl-rc#v0.1.5:
          artifact_file: all_artifacts.json
          stacks:
            - grapl/grapl/testing
            - grapl/grapl/customer-mock1
            - grapl/grapl/customer-mock2
            - grapl/integration-tests/testing
    env:
      # We're going to be doing some git manipulation, so it's best if
      # we have a clean slate.
      BUILDKITE_CLEAN_CHECKOUT: true
      # TODO: set these more centrally
      GIT_AUTHOR_NAME: "Grapl CI/CD"
      GIT_AUTHOR_EMAIL: "grapl-cicd@graplsecurity.com"
    agents:
      queue: "rc"

  - wait

  - label: ":writing_hand: Record successful build"
    command:
      - record_successful_pipeline_run.sh
    plugins:
      - grapl-security/grapl-release#v0.1.0
