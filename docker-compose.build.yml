# This file exists solely to coordinate the build of Grapl service
# containers.
#
# At the moment, these are "local" Grapl containers, and not
# necessarily identical to the artifacts we would use in real
# deployments.
version: "3.8"

services:
  ########################################################################
  # Rust Services
  ########################################################################

  sysmon-generator:
    image: sysmon-generator:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: sysmon-generator-deploy
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  osquery-generator:
    image: osquery-generator:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: osquery-generator-deploy
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  node-identifier:
    image: node-identifier:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: node-identifier-deploy
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  node-identifier-retry:
    image: node-identifier-retry:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: node-identifier-retry-deploy
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  graph-merger:
    image: graph-merger:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: graph-merger-deploy
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  analyzer-dispatcher:
    image: analyzer-dispatcher:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: analyzer-dispatcher-deploy
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  model-plugin-deployer:
    image: model-plugin-deployer:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: model-plugin-deployer
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  grapl-web-ui:
    image: grapl-web-ui:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: grapl-web-ui
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  organization-management:
    image: organization-management:${TAG:-latest}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: organization-management-deploy

  plugin-bootstrap:
    image: plugin-bootstrap:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: plugin-bootstrap-deploy
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  plugin-registry:
    image: plugin-registry:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: plugin-registry-deploy
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  plugin-work-queue:
    image: plugin-work-queue:${TAG}
    build:
      context: src
      dockerfile: rust/Dockerfile
      target: plugin-work-queue-deploy
      args:
        - RUST_BUILD=${RUST_BUILD:-debug}

  ########################################################################
  # Python Services
  ########################################################################

  # should match `pulumi/infra/analyzer_executor.py`'s GraplDockerBuild
  analyzer-executor:
    image: analyzer-executor:${TAG}
    build:
      context: .
      dockerfile: ./src/python/Dockerfile
      target: analyzer-executor

  engagement-creator:
    image: engagement-creator:${TAG}
    build:
      context: .
      dockerfile: ./src/python/Dockerfile
      target: engagement-creator

  ########################################################################
  # Web Services
  ########################################################################

  graphql-endpoint:
    image: graphql-endpoint:${TAG}
    build:
      context: src/js/graphql_endpoint
      dockerfile: Dockerfile
      target: graphql-endpoint-deploy

  ########################################################################
  # Utility Services
  ########################################################################

  pulumi:
    image: local-pulumi:${TAG}
    build:
      context: .
      dockerfile: Dockerfile.pulumi

  localstack:
    image: localstack-grapl-fork:${TAG}
    build:
      context: localstack
      dockerfile: Dockerfile

  postgres:
    image: postgres-ext:${TAG}
    build:
      context: postgres
      dockerfile: Dockerfile

  provisioner:
    image: provisioner:${TAG}
    build:
      context: .
      dockerfile: ./src/python/Dockerfile
      target: provisioner
