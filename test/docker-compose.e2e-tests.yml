version: "3.8"

# environment variable PWD is assumed to be grapl root directory

services:

  grapl-e2e-tests:
    image: grapl/e2e-tests:${TAG:-latest}
    build:
      context: .
      dockerfile: ./src/python/e2e-test-runner/e2e-test-runner.Dockerfile
    command: |
      /bin/bash -c "
          graplctl \
              --grapl-region $AWS_REGION \
              --grapl-deployment-name $DEPLOYMENT_NAME \
              --grapl-version $DEPLOYMENT_NAME \
              --aws-profile default \
              upload analyzer \
              --analyzer_main_py ./etc/local_grapl/suspicious_svchost/main.py && \
          graplctl \
              --grapl-region $AWS_REGION \
              --grapl-deployment-name $DEPLOYMENT_NAME \
              --grapl-version $DEPLOYMENT_NAME \
              --aws-profile default \
              upload analyzer \
              --analyzer_main_py ./etc/local_grapl/unique_cmd_parent/main.py && \
          graplctl \
              --grapl-region $AWS_REGION \
              --grapl-deployment-name $DEPLOYMENT_NAME \
              --grapl-version $DEPLOYMENT_NAME \
              --aws-profile default \
              upload sysmon \
              --logfile ./etc/sample_data/eventlog.xml && \
          python -c 'import lambdex_handler; lambdex_handler.handler(None, None)'
      "
    volumes:
      - dynamodb_dump:/mnt/dynamodb_dump
      - ${PWD}/etc:/home/grapl/etc:ro
    environment:
      AWS_REGION: ${AWS_REGION}
      DEPLOYMENT_NAME: ${DEPLOYMENT_NAME}
      DEBUG_SERVICES: ${DEBUG_SERVICES:-}
      GRAPL_LOG_LEVEL: ${GRAPL_LOG_LEVEL}
      IS_LOCAL: "True"
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_ACCESS_KEY_SECRET: ${S3_ACCESS_KEY_SECRET}
      S3_ENDPOINT: ${S3_ENDPOINT}
      SQS_ACCESS_KEY_ID: ${SQS_ACCESS_KEY_ID}
      SQS_ACCESS_KEY_SECRET: ${SQS_ACCESS_KEY_SECRET}
      SQS_ENDPOINT: ${SQS_ENDPOINT}
      SNS_ACCESS_KEY_ID: ${SNS_ACCESS_KEY_ID}
      SNS_ACCESS_KEY_SECRET: ${SNS_ACCESS_KEY_SECRET}
      SNS_ENDPOINT: ${SNS_ENDPOINT}
      SSM_ACCESS_KEY_ID: ${SSM_ACCESS_KEY_ID}
      SSM_ACCESS_KEY_SECRET: ${SSM_ACCESS_KEY_SECRET}
      SSM_ENDPOINT: ${SSM_ENDPOINT}
      SECRETSMANAGER_ACCESS_KEY_ID: ${SECRETSMANAGER_ACCESS_KEY_ID}
      SECRETSMANAGER_ACCESS_KEY_SECRET: ${SECRETSMANAGER_ACCESS_KEY_SECRET}
      SECRETSMANAGER_ENDPOINT: ${SECRETSMANAGER_ENDPOINT}
      CLOUDWATCH_ACCESS_KEY_ID: ${CLOUDWATCH_ACCESS_KEY_ID}
      CLOUDWATCH_ACCESS_KEY_SECRET: ${CLOUDWATCH_ACCESS_KEY_SECRET}
      CLOUDWATCH_ENDPOINT: ${CLOUDWATCH_ENDPOINT}
      LAMBDA_ACCESS_KEY_ID: ${LAMBDA_ACCESS_KEY_ID}
      LAMBDA_ACCESS_KEY_SECRET: ${LAMBDA_ACCESS_KEY_SECRET}
      LAMBDA_ENDPOINT: ${LAMBDA_ENDPOINT}
      ROUTE53_ACCESS_KEY_ID: ${ROUTE53_ACCESS_KEY_ID}
      ROUTE53_ACCESS_KEY_SECRET: ${ROUTE53_ACCESS_KEY_SECRET}
      ROUTE53_ENDPOINT: ${ROUTE53_ENDPOINT}
      VSC_DEBUGGER_PORT: ${VSC_DEBUGGER_PORT_FOR_GRAPL_E2E_TESTS}
      MG_ALPHAS: ${MG_ALPHAS}
      GRAPL_API_HOST: ${GRAPL_API_HOST}
      GRAPL_TEST_USER_NAME: ${GRAPL_TEST_USER_NAME}
    ports:
      - ${VSC_DEBUGGER_PORT_FOR_GRAPL_E2E_TESTS}:${VSC_DEBUGGER_PORT_FOR_GRAPL_E2E_TESTS}

volumes:
  dynamodb_dump:
networks:
  default:
    name: grapl-network
