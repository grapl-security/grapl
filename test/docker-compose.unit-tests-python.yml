version: "3.8"

# environment variable PWD is assumed to be grapl root directory

services:

  grapl-graph-descriptions-test:
    image: grapl/grapl-graph-descriptions-test:${TAG:-latest}
    build:
      context: ${PWD}/src
      dockerfile: ./python/Dockerfile
      target: graph-descriptions-test
    command: |
      bash -c ' \
        source venv/bin/activate && \
        cd graph-descriptions && \
        py.test -n auto -m "not integration_test"
        '

  grapl-common-test:
    image: grapl/grapl-grapl-common-test:${TAG:-latest}
    build:
      context: ${PWD}/src
      dockerfile: ./python/Dockerfile
      target: grapl-common-test
    command: |
      bash -c ' \
        source venv/bin/activate && \
        cd grapl-common/tests && \
        py.test -n auto -m "not integration_test"
        '

  grapl-analyzerlib-test:
    image: grapl/grapl-analyzerlib-test:${TAG:-latest}
    build:
      context: ${PWD}/src
      dockerfile: ./python/Dockerfile
      target: grapl-analyzerlib-test
    command: |
      bash -c ' \
        source venv/bin/activate && \
        cd grapl_analyzerlib && \
        py.test -n auto -m "not integration_test"
        '

  # grapl-analyzer-deployer:
  #   image: grapl/grapl-analyzer-deployer-test:${TAG:-latest}

  grapl-analyzer-executor-test:
    image: grapl/grapl-analyzer-executor-test:${TAG:-latest}
    build:
      context: ${PWD}/src
      dockerfile: ./python/Dockerfile
      target: analyzer-executor-test
    command: |
      bash -c ' \
        source venv/bin/activate && \
        cd analyzer_executor && \
        export PYTHONPATH="$${PYTHONPATH}:$$(pwd)/src" && \
        py.test -n auto -m "not integration_test"
        '

  grapl-engagement-creator-test:
    image: grapl/grapl-engagement-creator-test:${TAG:-latest}
    build:
      context: ${PWD}/src
      dockerfile: ./python/Dockerfile
      target: engagement-creator-test
    command: |
      bash -c ' \
        source venv/bin/activate && \
        cd engagement-creator && \
        py.test -n auto -m "not integration_test"
        '

  grapl-engagement-edge-test:
    image: grapl/grapl-engagement-edge-test:${TAG:-latest}
    build:
      context: ${PWD}/src
      dockerfile: ./python/Dockerfile
      target: engagement-edge-test
    command: |
      bash -c ' \
        source venv/bin/activate && \
        cd engagement_edge && \
        py.test -n auto -m "not integration_test"
        '

  grapl-model-plugin-deployer-test:
    image: grapl/grapl-model-plugin-deployer-test:${TAG:-latest}
    build:
      context: ${PWD}/src
      dockerfile: ./python/Dockerfile
      target: model-plugin-deployer-test
    command: |
      bash -c ' \
        source venv/bin/activate && \
        cd model-plugin-deployer && \
        py.test -n auto -m "not integration_test"
        '

  grapl-dgraph-ttl-test:
    image: grapl/grapl-dgraph-ttl-test:${TAG:-latest}
    build:
      context: ${PWD}/src
      dockerfile: ./python/Dockerfile
      target: dgraph-ttl-test
    command: |
      bash -c ' \
        source venv/bin/activate && \
        cd dgraph-ttl && \
        py.test -n auto -m "not integration_test"
        '

  grapl-notebook-test:
    image: grapl/grapl-notebook-test:${TAG:-latest}
    build: 
      context: ${PWD}/src
      dockerfile: ./python/Dockerfile
      target: grapl-notebook-test
    volumes:
      - ${PWD}/etc:/grapl-etc:ro
    # While the grapl provision notebook technically has nothing to do with grapl-notebook,
    # I've arbitrarily decided to make this the generalized "check the quality of ipynbs" image.
    command: |
      bash -c ' \
        source venv/bin/activate && \
        cd grapl-notebook && \
        nbqa mypy Demo_Engagement.ipynb && \
        cd /grapl-etc && \
        nbqa mypy "Grapl Provision.ipynb"
        '
