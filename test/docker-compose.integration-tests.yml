version: "3.8"

# environment variable PWD is assumed to be grapl root directory

volumes:
  # This is the same as defined in docker-compose.yml, and is provided
  # here so we can have access to outputs from the stack in our tests.
  pulumi_outputs:

x-common-variables:
  read-only-pulumi-mnt: &read-only-pulumi-mnt
    type: volume
    source: pulumi_outputs
    target: /mnt/pulumi-outputs
    read_only: true
  read-write-grapl-repo-mnt: &read-write-grapl-repo-mnt
    type: bind
    source: ${PWD}
    target: /mnt/grapl
    read_only: false

services:
  rust-integration-tests:
    image: grapl/rust-integration-tests:${TAG:-latest}
    build:
      context: ${PWD}/src
      dockerfile: rust/Dockerfile
      target: build-test
      args:
        - RUST_BUILD=test-integration
    entrypoint: ["/bin/bash", "-o", "errexit", "-o", "nounset", "-c"]
    command:
      - |
        export GRAPL_DYNAMIC_SESSION_TABLE=$$(cat /mnt/pulumi-outputs/dynamic-session-table)
        export GRAPL_STATIC_MAPPING_TABLE=$$(cat /mnt/pulumi-outputs/static-mapping-table)

        cargo test --features "$$RUST_INTEGRATION_TEST_FEATURES" --test "*"
    environment:
      - AWS_REGION
      - DEPLOYMENT_NAME
      - GRAPL_AWS_ACCESS_KEY_ID
      - GRAPL_AWS_ACCESS_KEY_SECRET
      - GRAPL_AWS_ENDPOINT
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-INFO}
      - MG_ALPHAS
      - RUST_BACKTRACE=1
      - RUST_LOG=INFO
      - REDIS_ENDPOINT
    volumes:
      - *read-only-pulumi-mnt

  python-integration-tests:
    image: grapl/python-integration-tests:${TAG:-latest}
    build:
      context: ${PWD}
      dockerfile: src/python/Dockerfile
      target: python-integration-tests
    command:
      - |
        export GRAPL_ANALYZERS_BUCKET=$$(cat /mnt/pulumi-outputs/analyzers-bucket)
        export GRAPL_ANALYZER_MATCHED_SUBGRAPHS_BUCKET=$$(cat /mnt/pulumi-outputs/analyzer-matched-subgraphs-bucket)
        export GRAPL_MODEL_PLUGINS_BUCKET=$$(cat /mnt/pulumi-outputs/model-plugins-bucket)
        export GRAPL_DYNAMIC_SESSION_TABLE=$$(cat /mnt/pulumi-outputs/dynamic-session-table)
        export GRAPL_STATIC_MAPPING_TABLE=$$(cat /mnt/pulumi-outputs/static-mapping-table)
        export GRAPL_SCHEMA_PROPERTIES_TABLE=$$(cat /mnt/pulumi-outputs/schema-properties-table)
        cd /mnt/grapl
        ./pants filter --filter-target-type="python_tests" :: \
            | xargs ./pants --tag="-needs_work" test --pytest-args="-m \"integration_test\""
    environment:
      - AWS_REGION
      - DEBUG_SERVICES=${DEBUG_SERVICES:-}
      - DEPLOYMENT_NAME
      - GRAPL_API_HOST
      - GRAPL_AWS_ACCESS_KEY_ID
      - GRAPL_AWS_ACCESS_KEY_SECRET
      - GRAPL_AWS_ENDPOINT
      - GRAPL_HTTP_FRONTEND_PORT
      - GRAPL_LOG_LEVEL=${GRAPL_LOG_LEVEL:-INFO}
      - GRAPL_NOTEBOOK_INSTANCE="local-grapl-Notebook"
      - GRAPL_TEST_USER_NAME
      - HITCACHE_ADDR=${REDIS_HOST}
      - HITCACHE_PORT=${REDIS_PORT}
      - IS_LOCAL=True
      - IS_RETRY=False
      - MESSAGECACHE_ADDR=${REDIS_HOST}
      - MESSAGECACHE_PORT=${REDIS_PORT}
      - MG_ALPHAS
      - UX_BUCKET_URL="ux_bucket_url"
      - VSC_DEBUGGER_PORT=${VSC_DEBUGGER_PORT_FOR_GRAPHQL_ENDPOINT_TESTS}
    ports:
      - ${VSC_DEBUGGER_PORT_FOR_GRAPHQL_ENDPOINT_TESTS}:${VSC_DEBUGGER_PORT_FOR_GRAPHQL_ENDPOINT_TESTS}
    volumes:
      - *read-only-pulumi-mnt
      - *read-write-grapl-repo-mnt

networks:
  default:
    name: grapl-network
